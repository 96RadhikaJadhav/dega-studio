// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Posts Create Form component snapshot testing should match component with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PostForm
    data={
      Object {
        "authors": Array [
          1,
        ],
        "categories": Array [
          1,
        ],
        "claims": Array [
          1,
        ],
        "description": Object {
          "blocks": Array [
            Object {
              "data": Object {
                "level": 2,
                "text": "Editor.js",
              },
              "type": "header",
            },
            Object {
              "data": Object {
                "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
              },
              "type": "paragraph",
            },
          ],
          "time": 1595747741807,
          "version": "2.18.0",
        },
        "excerpt": "excerpt of post",
        "featured_medium_id": 1,
        "format": 1,
        "id": 1,
        "slug": "post-1",
        "status": "draft",
        "tags": Array [
          1,
        ],
        "title": "Post-1",
      }
    }
    onCreate={[MockFunction]}
  >
    <Modal
      confirmLoading={false}
      maskTransitionName="fade"
      okType="primary"
      onCancel={[Function]}
      onOk={[Function]}
      transitionName="zoom"
      visible={false}
      width={520}
    >
      <Component
        closeIcon={
          <span
            className="ant-modal-close-x"
          >
            <ForwardRef(CloseOutlined)
              className="ant-modal-close-icon"
            />
          </span>
        }
        confirmLoading={false}
        footer={
          <LocaleReceiver
            componentName="Modal"
            defaultLocale={
              Object {
                "cancelText": "Cancel",
                "justOkText": "OK",
                "okText": "OK",
              }
            }
          >
            [Function]
          </LocaleReceiver>
        }
        maskTransitionName="fade"
        okType="primary"
        onCancel={[Function]}
        onClose={[Function]}
        onOk={[Function]}
        prefixCls="ant-modal"
        transitionName="zoom"
        visible={false}
        width={520}
        wrapClassName=""
      >
        <PortalWrapper
          visible={false}
        />
      </Component>
    </Modal>
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": undefined,
          },
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={
        Object {
          "authors": Array [
            1,
          ],
          "categories": Array [
            1,
          ],
          "claims": Array [
            1,
          ],
          "description": Object {
            "blocks": Array [
              Object {
                "data": Object {
                  "level": 2,
                  "text": "Editor.js",
                },
                "type": "header",
              },
              Object {
                "data": Object {
                  "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                },
                "type": "paragraph",
              },
            ],
            "time": 1595747741807,
            "version": "2.18.0",
          },
          "excerpt": "excerpt of post",
          "featured_medium_id": 1,
          "format": 1,
          "id": 1,
          "slug": "post-1",
          "status": "draft",
          "tags": Array [
            1,
          ],
          "title": "Post-1",
        }
      }
      layout="vertical"
      onFinish={[Function]}
      onValuesChange={[Function]}
      style={
        Object {
          "maxWidth": "100%",
          "width": "100%",
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": undefined,
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          initialValues={
            Object {
              "authors": Array [
                1,
              ],
              "categories": Array [
                1,
              ],
              "claims": Array [
                1,
              ],
              "description": Object {
                "blocks": Array [
                  Object {
                    "data": Object {
                      "level": 2,
                      "text": "Editor.js",
                    },
                    "type": "header",
                  },
                  Object {
                    "data": Object {
                      "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                    },
                    "type": "paragraph",
                  },
                ],
                "time": 1595747741807,
                "version": "2.18.0",
              },
              "excerpt": "excerpt of post",
              "featured_medium_id": 1,
              "format": 1,
              "id": 1,
              "slug": "post-1",
              "status": "draft",
              "tags": Array [
                1,
              ],
              "title": "Post-1",
            }
          }
          onFinish={[Function]}
          onFinishFailed={[Function]}
          onValuesChange={[Function]}
          style={
            Object {
              "maxWidth": "100%",
              "width": "100%",
            }
          }
        >
          <form
            className="ant-form ant-form-vertical"
            onSubmit={[Function]}
            style={
              Object {
                "maxWidth": "100%",
                "width": "100%",
              }
            }
          >
            <Space
              direction="vertical"
            >
              <div
                className="ant-space ant-space-vertical"
              >
                <div
                  className="ant-space-item"
                  key="ant-space-item-0"
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  <FormItem
                    name="status"
                    style={
                      Object {
                        "float": "right",
                      }
                    }
                  >
                    <WrapperField
                      messageVariables={Object {}}
                      name="status"
                      onReset={[Function]}
                      style={
                        Object {
                          "float": "right",
                        }
                      }
                      trigger="onChange"
                      validateTrigger="onChange"
                    >
                      <Field
                        key="_status"
                        messageVariables={Object {}}
                        name={
                          Array [
                            "status",
                          ]
                        }
                        onReset={[Function]}
                        style={
                          Object {
                            "float": "right",
                          }
                        }
                        trigger="onChange"
                        validateTrigger="onChange"
                        valuePropName="value"
                      >
                        <Row
                          className="ant-form-item"
                          key="row"
                          style={
                            Object {
                              "float": "right",
                            }
                          }
                        >
                          <div
                            className="ant-row ant-form-item"
                            style={
                              Object {
                                "float": "right",
                              }
                            }
                          >
                            <FormItemLabel
                              htmlFor="status"
                              name="status"
                              prefixCls="ant-form"
                              required={false}
                              style={
                                Object {
                                  "float": "right",
                                }
                              }
                            />
                            <FormItemInput
                              errors={Array []}
                              name={
                                Array [
                                  "status",
                                ]
                              }
                              onDomErrorVisibleChange={[Function]}
                              prefixCls="ant-form"
                              style={
                                Object {
                                  "float": "right",
                                }
                              }
                              touched={false}
                              validateStatus=""
                              validating={false}
                            >
                              <Col
                                className="ant-form-item-control"
                              >
                                <div
                                  className="ant-col ant-form-item-control"
                                  style={Object {}}
                                >
                                  <div
                                    className="ant-form-item-control-input"
                                  >
                                    <div
                                      className="ant-form-item-control-input-content"
                                    >
                                      <Component
                                        update={1}
                                        value="draft"
                                      >
                                        <Group
                                          compact={true}
                                          id="status"
                                          onChange={[Function]}
                                          value="draft"
                                        >
                                          <span
                                            className="ant-input-group ant-input-group-compact"
                                          >
                                            <Button
                                              block={false}
                                              ghost={false}
                                              htmlType="submit"
                                              icon={<ForwardRef(SaveOutlined) />}
                                              loading={false}
                                              onClick={[Function]}
                                              type="secondary"
                                            >
                                              <Wave>
                                                <button
                                                  className="ant-btn ant-btn-secondary"
                                                  onClick={[Function]}
                                                  type="submit"
                                                >
                                                  <ForwardRef(SaveOutlined)>
                                                    <AntdIcon
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M893.3 293.3L730.7 130.7c-7.5-7.5-16.7-13-26.7-16V112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 184h256v104H384V184zm456 656H184V184h136v136c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V205.8l136 136V840zM512 442c-79.5 0-144 64.5-144 144s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144zm0 224c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "save",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="save"
                                                        className="anticon anticon-save"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M893.3 293.3L730.7 130.7c-7.5-7.5-16.7-13-26.7-16V112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 184h256v104H384V184zm456 656H184V184h136v136c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V205.8l136 136V840zM512 442c-79.5 0-144 64.5-144 144s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144zm0 224c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "save",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="save"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-save"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M893.3 293.3L730.7 130.7c-7.5-7.5-16.7-13-26.7-16V112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 184h256v104H384V184zm456 656H184V184h136v136c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V205.8l136 136V840zM512 442c-79.5 0-144 64.5-144 144s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144zm0 224c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80z"
                                                              key="svg-save-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(SaveOutlined)>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Draft
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                            <Button
                                              block={false}
                                              ghost={false}
                                              htmlType="submit"
                                              icon={<ForwardRef(ToTopOutlined) />}
                                              loading={false}
                                              onClick={[Function]}
                                              type="primary"
                                            >
                                              <Wave>
                                                <button
                                                  className="ant-btn ant-btn-primary"
                                                  onClick={[Function]}
                                                  type="submit"
                                                >
                                                  <ForwardRef(ToTopOutlined)>
                                                    <AntdIcon
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M885 780H165c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zM400 325.7h73.9V664c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V325.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 171a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "to-top",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="to-top"
                                                        className="anticon anticon-to-top"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M885 780H165c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zM400 325.7h73.9V664c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V325.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 171a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "to-top",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="to-top"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-to-top"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M885 780H165c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zM400 325.7h73.9V664c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V325.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 171a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13z"
                                                              key="svg-to-top-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(ToTopOutlined)>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Publish
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                          </span>
                                        </Group>
                                      </Component>
                                    </div>
                                  </div>
                                  <ForwardRef
                                    motionAppear={true}
                                    motionDeadline={500}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  >
                                    <CSSMotion
                                      internalRef={null}
                                      motionAppear={true}
                                      motionDeadline={500}
                                      motionEnter={true}
                                      motionLeave={true}
                                      motionName="show-help"
                                      onLeaveEnd={[Function]}
                                      removeOnLeave={true}
                                      visible={false}
                                    />
                                  </ForwardRef>
                                </div>
                              </Col>
                            </FormItemInput>
                          </div>
                        </Row>
                      </Field>
                    </WrapperField>
                  </FormItem>
                </div>
                <div
                  className="ant-space-item"
                  key="ant-space-item-1"
                  style={Object {}}
                >
                  <Row
                    gutter={16}
                  >
                    <div
                      className="ant-row"
                      style={
                        Object {
                          "marginLeft": -8,
                          "marginRight": -8,
                        }
                      }
                    >
                      <Col
                        span={18}
                      >
                        <div
                          className="ant-col ant-col-18"
                          style={
                            Object {
                              "paddingLeft": 8,
                              "paddingRight": 8,
                            }
                          }
                        >
                          <FormItem
                            label="Title"
                            name="title"
                            rules={
                              Array [
                                Object {
                                  "message": "Please input the title!",
                                  "required": true,
                                },
                                Object {
                                  "message": "Title must be minimum 3 characters.",
                                  "min": 3,
                                },
                                Object {
                                  "max": 150,
                                  "message": "Title must be maximum 150 characters.",
                                },
                              ]
                            }
                          >
                            <WrapperField
                              label="Title"
                              messageVariables={
                                Object {
                                  "label": "Title",
                                }
                              }
                              name="title"
                              onReset={[Function]}
                              rules={
                                Array [
                                  Object {
                                    "message": "Please input the title!",
                                    "required": true,
                                  },
                                  Object {
                                    "message": "Title must be minimum 3 characters.",
                                    "min": 3,
                                  },
                                  Object {
                                    "max": 150,
                                    "message": "Title must be maximum 150 characters.",
                                  },
                                ]
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_title"
                                label="Title"
                                messageVariables={
                                  Object {
                                    "label": "Title",
                                  }
                                }
                                name={
                                  Array [
                                    "title",
                                  ]
                                }
                                onReset={[Function]}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the title!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Title must be minimum 3 characters.",
                                      "min": 3,
                                    },
                                    Object {
                                      "max": 150,
                                      "message": "Title must be maximum 150 characters.",
                                    },
                                  ]
                                }
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="title"
                                      label="Title"
                                      name="title"
                                      prefixCls="ant-form"
                                      required={true}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please input the title!",
                                            "required": true,
                                          },
                                          Object {
                                            "message": "Title must be minimum 3 characters.",
                                            "min": 3,
                                          },
                                          Object {
                                            "max": 150,
                                            "message": "Title must be maximum 150 characters.",
                                          },
                                        ]
                                      }
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className="ant-form-item-required"
                                            htmlFor="title"
                                            title="Title"
                                          >
                                            Title
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Title"
                                      name={
                                        Array [
                                          "title",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please input the title!",
                                            "required": true,
                                          },
                                          Object {
                                            "message": "Title must be minimum 3 characters.",
                                            "min": 3,
                                          },
                                          Object {
                                            "max": 150,
                                            "message": "Title must be maximum 150 characters.",
                                          },
                                        ]
                                      }
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                                value="Post-1"
                                              >
                                                <Input
                                                  id="title"
                                                  onChange={[Function]}
                                                  placeholder="title"
                                                  type="text"
                                                  value="Post-1"
                                                >
                                                  <ClearableLabeledInput
                                                    bordered={true}
                                                    element={
                                                      <input
                                                        className="ant-input"
                                                        id="title"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="title"
                                                        type="text"
                                                        value="Post-1"
                                                      />
                                                    }
                                                    focused={false}
                                                    handleReset={[Function]}
                                                    id="title"
                                                    inputType="input"
                                                    onChange={[Function]}
                                                    placeholder="title"
                                                    prefixCls="ant-input"
                                                    triggerFocus={[Function]}
                                                    type="text"
                                                    value="Post-1"
                                                  >
                                                    <input
                                                      className="ant-input"
                                                      id="title"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      placeholder="title"
                                                      type="text"
                                                      value="Post-1"
                                                    />
                                                  </ClearableLabeledInput>
                                                </Input>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            label="Excerpt"
                            name="excerpt"
                            rules={
                              Array [
                                Object {
                                  "message": "Please input excerpt!",
                                  "required": true,
                                },
                                Object {
                                  "message": "Title must be minimum 3 characters.",
                                  "min": 3,
                                },
                                Object {
                                  "max": 300,
                                  "message": "Title must be maximum 300 characters.",
                                },
                              ]
                            }
                          >
                            <WrapperField
                              label="Excerpt"
                              messageVariables={
                                Object {
                                  "label": "Excerpt",
                                }
                              }
                              name="excerpt"
                              onReset={[Function]}
                              rules={
                                Array [
                                  Object {
                                    "message": "Please input excerpt!",
                                    "required": true,
                                  },
                                  Object {
                                    "message": "Title must be minimum 3 characters.",
                                    "min": 3,
                                  },
                                  Object {
                                    "max": 300,
                                    "message": "Title must be maximum 300 characters.",
                                  },
                                ]
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_excerpt"
                                label="Excerpt"
                                messageVariables={
                                  Object {
                                    "label": "Excerpt",
                                  }
                                }
                                name={
                                  Array [
                                    "excerpt",
                                  ]
                                }
                                onReset={[Function]}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input excerpt!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Title must be minimum 3 characters.",
                                      "min": 3,
                                    },
                                    Object {
                                      "max": 300,
                                      "message": "Title must be maximum 300 characters.",
                                    },
                                  ]
                                }
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="excerpt"
                                      label="Excerpt"
                                      name="excerpt"
                                      prefixCls="ant-form"
                                      required={true}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please input excerpt!",
                                            "required": true,
                                          },
                                          Object {
                                            "message": "Title must be minimum 3 characters.",
                                            "min": 3,
                                          },
                                          Object {
                                            "max": 300,
                                            "message": "Title must be maximum 300 characters.",
                                          },
                                        ]
                                      }
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className="ant-form-item-required"
                                            htmlFor="excerpt"
                                            title="Excerpt"
                                          >
                                            Excerpt
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Excerpt"
                                      name={
                                        Array [
                                          "excerpt",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please input excerpt!",
                                            "required": true,
                                          },
                                          Object {
                                            "message": "Title must be minimum 3 characters.",
                                            "min": 3,
                                          },
                                          Object {
                                            "max": 300,
                                            "message": "Title must be maximum 300 characters.",
                                          },
                                        ]
                                      }
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                                value="excerpt of post"
                                              >
                                                <TextArea
                                                  id="excerpt"
                                                  onChange={[Function]}
                                                  placeholder="excerpt"
                                                  rows={4}
                                                  value="excerpt of post"
                                                >
                                                  <ClearableLabeledInput
                                                    bordered={true}
                                                    element={
                                                      <TextArea
                                                        className=""
                                                        id="excerpt"
                                                        onChange={[Function]}
                                                        placeholder="excerpt"
                                                        prefixCls="ant-input"
                                                        rows={4}
                                                        value="excerpt of post"
                                                      />
                                                    }
                                                    handleReset={[Function]}
                                                    id="excerpt"
                                                    inputType="text"
                                                    onChange={[Function]}
                                                    placeholder="excerpt"
                                                    prefixCls="ant-input"
                                                    rows={4}
                                                    triggerFocus={[Function]}
                                                    value="excerpt of post"
                                                  >
                                                    <TextArea
                                                      className=""
                                                      id="excerpt"
                                                      onChange={[Function]}
                                                      placeholder="excerpt"
                                                      prefixCls="ant-input"
                                                      rows={4}
                                                      value="excerpt of post"
                                                    >
                                                      <ResizableTextArea
                                                        className=""
                                                        id="excerpt"
                                                        onChange={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="excerpt"
                                                        prefixCls="ant-input"
                                                        rows={4}
                                                        value="excerpt of post"
                                                      >
                                                        <ResizeObserver
                                                          disabled={true}
                                                          onResize={[Function]}
                                                        >
                                                          <textarea
                                                            className="ant-input"
                                                            id="excerpt"
                                                            onChange={[Function]}
                                                            onKeyDown={[Function]}
                                                            placeholder="excerpt"
                                                            rows={4}
                                                            style={Object {}}
                                                            value="excerpt of post"
                                                          />
                                                        </ResizeObserver>
                                                      </ResizableTextArea>
                                                    </TextArea>
                                                  </ClearableLabeledInput>
                                                </TextArea>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            hidden={true}
                            key="true"
                            label="Claims"
                            name="claims"
                          >
                            <WrapperField
                              hidden={true}
                              label="Claims"
                              messageVariables={
                                Object {
                                  "label": "Claims",
                                }
                              }
                              name="claims"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                hidden={true}
                                key="_claims"
                                label="Claims"
                                messageVariables={
                                  Object {
                                    "label": "Claims",
                                  }
                                }
                                name={
                                  Array [
                                    "claims",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item ant-form-item-hidden"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item ant-form-item-hidden"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      hidden={true}
                                      htmlFor="claims"
                                      label="Claims"
                                      name="claims"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="claims"
                                            title="Claims"
                                          >
                                            Claims
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      hidden={true}
                                      label="Claims"
                                      name={
                                        Array [
                                          "claims",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                                value={
                                                  Array [
                                                    1,
                                                  ]
                                                }
                                              >
                                                <Selector
                                                  action="Claims"
                                                  display="title"
                                                  id="claims"
                                                  mode="multiple"
                                                  onChange={[Function]}
                                                  value={
                                                    Array [
                                                      1,
                                                    ]
                                                  }
                                                >
                                                  <Select
                                                    bordered={true}
                                                    choiceTransitionName=""
                                                    defaultValue={
                                                      Array [
                                                        1,
                                                      ]
                                                    }
                                                    filterOption={[Function]}
                                                    listHeight={128}
                                                    loading={false}
                                                    mode="multiple"
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Select claims"
                                                    transitionName="slide-up"
                                                  >
                                                    <Select
                                                      choiceTransitionName=""
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={
                                                        Array [
                                                          1,
                                                        ]
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Select claims"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      transitionName="slide-up"
                                                    >
                                                      <ForwardRef(Select)
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={
                                                          Array [
                                                            1,
                                                          ]
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        inputIcon={[Function]}
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        mode="multiple"
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        placeholder="Select claims"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                      >
                                                        <div
                                                          className="ant-select ant-select-multiple ant-select-show-search"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SelectTrigger
                                                            containerWidth={null}
                                                            dropdownClassName=""
                                                            empty={true}
                                                            getTriggerDOMNode={[Function]}
                                                            popupElement={
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={true}
                                                                flattenOptions={Array []}
                                                                height={128}
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onScroll={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={Array []}
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={
                                                                  Set {
                                                                    1,
                                                                  }
                                                                }
                                                                virtual={true}
                                                              />
                                                            }
                                                            prefixCls="ant-select"
                                                            transitionName="slide-up"
                                                          >
                                                            <Trigger
                                                              action={Array []}
                                                              afterPopupVisibleChange={[Function]}
                                                              autoDestroy={false}
                                                              blurDelay={0.15}
                                                              builtinPlacements={
                                                                Object {
                                                                  "bottomLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tl",
                                                                      "bl",
                                                                    ],
                                                                  },
                                                                  "bottomRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tr",
                                                                      "br",
                                                                    ],
                                                                  },
                                                                  "topLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "bl",
                                                                      "tl",
                                                                    ],
                                                                  },
                                                                  "topRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "br",
                                                                      "tr",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              defaultPopupVisible={false}
                                                              destroyPopupOnHide={false}
                                                              focusDelay={0}
                                                              getDocument={[Function]}
                                                              getPopupClassNameFromAlign={[Function]}
                                                              getTriggerDOMNode={[Function]}
                                                              hideAction={Array []}
                                                              mask={false}
                                                              maskClosable={true}
                                                              mouseEnterDelay={0}
                                                              mouseLeaveDelay={0.1}
                                                              onPopupAlign={[Function]}
                                                              onPopupVisibleChange={[Function]}
                                                              popup={
                                                                <div>
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={Array []}
                                                                    height={128}
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onScroll={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={Array []}
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={
                                                                      Set {
                                                                        1,
                                                                      }
                                                                    }
                                                                    virtual={true}
                                                                  />
                                                                </div>
                                                              }
                                                              popupAlign={Object {}}
                                                              popupClassName="ant-select-dropdown-empty"
                                                              popupPlacement="bottomLeft"
                                                              popupStyle={
                                                                Object {
                                                                  "minWidth": null,
                                                                  "width": null,
                                                                }
                                                              }
                                                              popupTransitionName="slide-up"
                                                              prefixCls="ant-select-dropdown"
                                                              showAction={Array []}
                                                            >
                                                              <Selector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                choiceTransitionName=""
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={
                                                                  Array [
                                                                    1,
                                                                  ]
                                                                }
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-item"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-item-content"
                                                                        >
                                                                          1
                                                                        </span>
                                                                        <span
                                                                          aria-hidden="true"
                                                                          class="ant-select-selection-item-remove"
                                                                          style="user-select: none;"
                                                                          unselectable="on"
                                                                        >
                                                                          <span
                                                                            aria-label="close"
                                                                            class="anticon anticon-close"
                                                                            role="img"
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              class=""
                                                                              data-icon="close"
                                                                              fill="currentColor"
                                                                              focusable="false"
                                                                              height="1em"
                                                                              viewBox="64 64 896 896"
                                                                              width="1em"
                                                                            >
                                                                              <path
                                                                                d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                              />
                                                                            </svg>
                                                                          </span>
                                                                        </span>
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                        style="width: 0px;"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                        <span
                                                                          aria-hidden="true"
                                                                          class="ant-select-selection-search-mirror"
                                                                        >
                                                                          
                                                                           
                                                                        </span>
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                key="trigger"
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                mode="multiple"
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="Select claims"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={true}
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                values={
                                                                  Array [
                                                                    Object {
                                                                      "disabled": undefined,
                                                                      "key": 1,
                                                                      "label": 1,
                                                                      "value": 1,
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <div
                                                                  className="ant-select-selector"
                                                                  onMouseDown={[Function]}
                                                                >
                                                                  <SelectSelector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    choiceTransitionName=""
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue={
                                                                      Array [
                                                                        1,
                                                                      ]
                                                                    }
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-item"
                                                                          >
                                                                            <span
                                                                              class="ant-select-selection-item-content"
                                                                            >
                                                                              1
                                                                            </span>
                                                                            <span
                                                                              aria-hidden="true"
                                                                              class="ant-select-selection-item-remove"
                                                                              style="user-select: none;"
                                                                              unselectable="on"
                                                                            >
                                                                              <span
                                                                                aria-label="close"
                                                                                class="anticon anticon-close"
                                                                                role="img"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  class=""
                                                                                  data-icon="close"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                  />
                                                                                </svg>
                                                                              </span>
                                                                            </span>
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                            style="width: 0px;"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                            <span
                                                                              aria-hidden="true"
                                                                              class="ant-select-selection-search-mirror"
                                                                            >
                                                                              
                                                                               
                                                                            </span>
                                                                          </span>
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    filterOption={[Function]}
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    inputRef={
                                                                      Object {
                                                                        "current": <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />,
                                                                      }
                                                                    }
                                                                    listHeight={128}
                                                                    listItemHeight={24}
                                                                    loading={false}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    mode="multiple"
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onInputChange={[Function]}
                                                                    onInputCompositionEnd={[Function]}
                                                                    onInputCompositionStart={[Function]}
                                                                    onInputKeyDown={[Function]}
                                                                    onInputMouseDown={[Function]}
                                                                    onInputPaste={[Function]}
                                                                    onPopupScroll={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    placeholder="Select claims"
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={true}
                                                                    tokenWithEnter={false}
                                                                    transitionName="slide-up"
                                                                    values={
                                                                      Array [
                                                                        Object {
                                                                          "disabled": undefined,
                                                                          "key": 1,
                                                                          "label": 1,
                                                                          "value": 1,
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <CSSMotionList
                                                                      component={false}
                                                                      keys={
                                                                        Array [
                                                                          Object {
                                                                            "disabled": undefined,
                                                                            "key": 1,
                                                                            "label": 1,
                                                                            "value": 1,
                                                                          },
                                                                        ]
                                                                      }
                                                                      motionAppear={false}
                                                                      motionName=""
                                                                    >
                                                                      <ForwardRef
                                                                        eventProps={
                                                                          Object {
                                                                            "disabled": undefined,
                                                                            "key": "1",
                                                                            "label": 1,
                                                                            "value": 1,
                                                                          }
                                                                        }
                                                                        key="1"
                                                                        motionAppear={false}
                                                                        motionName=""
                                                                        onLeaveEnd={[Function]}
                                                                        visible={true}
                                                                      >
                                                                        <CSSMotion
                                                                          eventProps={
                                                                            Object {
                                                                              "disabled": undefined,
                                                                              "key": "1",
                                                                              "label": 1,
                                                                              "value": 1,
                                                                            }
                                                                          }
                                                                          internalRef={null}
                                                                          motionAppear={false}
                                                                          motionEnter={true}
                                                                          motionLeave={true}
                                                                          motionName=""
                                                                          onLeaveEnd={[Function]}
                                                                          removeOnLeave={true}
                                                                          visible={true}
                                                                        >
                                                                          <span
                                                                            className="ant-select-selection-item"
                                                                            key="1"
                                                                          >
                                                                            <span
                                                                              className="ant-select-selection-item-content"
                                                                            >
                                                                              1
                                                                            </span>
                                                                            <TransBtn
                                                                              className="ant-select-selection-item-remove"
                                                                              customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                              onClick={[Function]}
                                                                              onMouseDown={[Function]}
                                                                            >
                                                                              <span
                                                                                aria-hidden={true}
                                                                                className="ant-select-selection-item-remove"
                                                                                onClick={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                style={
                                                                                  Object {
                                                                                    "WebkitUserSelect": "none",
                                                                                    "userSelect": "none",
                                                                                  }
                                                                                }
                                                                                unselectable="on"
                                                                              >
                                                                                <ForwardRef(CloseOutlined)>
                                                                                  <AntdIcon
                                                                                    icon={
                                                                                      Object {
                                                                                        "icon": Object {
                                                                                          "attrs": Object {
                                                                                            "focusable": "false",
                                                                                            "viewBox": "64 64 896 896",
                                                                                          },
                                                                                          "children": Array [
                                                                                            Object {
                                                                                              "attrs": Object {
                                                                                                "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                              },
                                                                                              "tag": "path",
                                                                                            },
                                                                                          ],
                                                                                          "tag": "svg",
                                                                                        },
                                                                                        "name": "close",
                                                                                        "theme": "outlined",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <span
                                                                                      aria-label="close"
                                                                                      className="anticon anticon-close"
                                                                                      role="img"
                                                                                    >
                                                                                      <IconReact
                                                                                        className=""
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close",
                                                                                            "theme": "outlined",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden="true"
                                                                                          className=""
                                                                                          data-icon="close"
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height="1em"
                                                                                          key="svg-close"
                                                                                          viewBox="64 64 896 896"
                                                                                          width="1em"
                                                                                        >
                                                                                          <path
                                                                                            d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                            key="svg-close-svg-0"
                                                                                          />
                                                                                        </svg>
                                                                                      </IconReact>
                                                                                    </span>
                                                                                  </AntdIcon>
                                                                                </ForwardRef(CloseOutlined)>
                                                                              </span>
                                                                            </TransBtn>
                                                                          </span>
                                                                        </CSSMotion>
                                                                      </ForwardRef>
                                                                    </CSSMotionList>
                                                                    <span
                                                                      className="ant-select-selection-search"
                                                                      style={
                                                                        Object {
                                                                          "width": 0,
                                                                        }
                                                                      }
                                                                    >
                                                                      <Input
                                                                        accessibilityIndex={0}
                                                                        attrs={Object {}}
                                                                        inputElement={null}
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        prefixCls="ant-select"
                                                                        value=""
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="undefined_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="undefined_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="undefined_list"
                                                                          autoComplete="off"
                                                                          className="ant-select-selection-search-input"
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          readOnly={true}
                                                                          role="combobox"
                                                                          style={
                                                                            Object {
                                                                              "opacity": 0,
                                                                            }
                                                                          }
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </Input>
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-selection-search-mirror"
                                                                      >
                                                                         
                                                                      </span>
                                                                    </span>
                                                                  </SelectSelector>
                                                                </div>
                                                              </Selector>
                                                            </Trigger>
                                                          </SelectTrigger>
                                                        </div>
                                                      </ForwardRef(Select)>
                                                    </Select>
                                                  </Select>
                                                </Selector>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            hidden={true}
                          >
                            <Row
                              className="ant-form-item ant-form-item-hidden"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item ant-form-item-hidden"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  hidden={true}
                                  prefixCls="ant-form"
                                />
                                <FormItemInput
                                  errors={Array []}
                                  hidden={true}
                                  onDomErrorVisibleChange={[Function]}
                                  prefixCls="ant-form"
                                  validateStatus=""
                                >
                                  <Col
                                    className="ant-form-item-control"
                                  >
                                    <div
                                      className="ant-col ant-form-item-control"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Button
                                            block={false}
                                            ghost={false}
                                            htmlType="button"
                                            loading={false}
                                            onClick={[Function]}
                                            type="primary"
                                          >
                                            <Wave>
                                              <button
                                                className="ant-btn ant-btn-primary"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <ForwardRef
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <CSSMotion
                                                      internalRef={null}
                                                      motionAppear={true}
                                                      motionEnter={true}
                                                      motionLeave={true}
                                                      motionName="ant-btn-loading-icon-motion"
                                                      onAppearActive={[Function]}
                                                      onAppearStart={[Function]}
                                                      onEnterActive={[Function]}
                                                      onEnterStart={[Function]}
                                                      onLeaveActive={[Function]}
                                                      onLeaveStart={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    />
                                                  </ForwardRef>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  Add Claim
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                      </div>
                                      <ForwardRef
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <CSSMotion
                                          internalRef={null}
                                          motionAppear={true}
                                          motionDeadline={500}
                                          motionEnter={true}
                                          motionLeave={true}
                                          motionName="show-help"
                                          onLeaveEnd={[Function]}
                                          removeOnLeave={true}
                                          visible={false}
                                        />
                                      </ForwardRef>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </FormItem>
                          <FormItem
                            label="Description"
                            name="description"
                          >
                            <WrapperField
                              label="Description"
                              messageVariables={
                                Object {
                                  "label": "Description",
                                }
                              }
                              name="description"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_description"
                                label="Description"
                                messageVariables={
                                  Object {
                                    "label": "Description",
                                  }
                                }
                                name={
                                  Array [
                                    "description",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="description"
                                      label="Description"
                                      name="description"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="description"
                                            title="Description"
                                          >
                                            Description
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Description"
                                      name={
                                        Array [
                                          "description",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                                value={
                                                  Object {
                                                    "blocks": Array [
                                                      Object {
                                                        "data": Object {
                                                          "level": 2,
                                                          "text": "Editor.js",
                                                        },
                                                        "type": "header",
                                                      },
                                                      Object {
                                                        "data": Object {
                                                          "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                                                        },
                                                        "type": "paragraph",
                                                      },
                                                    ],
                                                    "time": 1595747741807,
                                                    "version": "2.18.0",
                                                  }
                                                }
                                              >
                                                <Editor
                                                  id="description"
                                                  onChange={[Function]}
                                                  value={
                                                    Object {
                                                      "blocks": Array [
                                                        Object {
                                                          "data": Object {
                                                            "level": 2,
                                                            "text": "Editor.js",
                                                          },
                                                          "type": "header",
                                                        },
                                                        Object {
                                                          "data": Object {
                                                            "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                                                          },
                                                          "type": "paragraph",
                                                        },
                                                      ],
                                                      "time": 1595747741807,
                                                      "version": "2.18.0",
                                                    }
                                                  }
                                                >
                                                  <div />
                                                </Editor>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                        </div>
                      </Col>
                      <Col
                        span={6}
                      >
                        <div
                          className="ant-col ant-col-6"
                          style={
                            Object {
                              "paddingLeft": 8,
                              "paddingRight": 8,
                            }
                          }
                        >
                          <FormItem
                            label="Status"
                            name="status"
                          >
                            <WrapperField
                              label="Status"
                              messageVariables={
                                Object {
                                  "label": "Status",
                                }
                              }
                              name="status"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_status"
                                label="Status"
                                messageVariables={
                                  Object {
                                    "label": "Status",
                                  }
                                }
                                name={
                                  Array [
                                    "status",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="status"
                                      label="Status"
                                      name="status"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="status"
                                            title="Status"
                                          >
                                            Status
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Status"
                                      name={
                                        Array [
                                          "status",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                                value="draft"
                                              >
                                                <withConfigConsumer(Statistic)
                                                  id="status"
                                                  onChange={[Function]}
                                                  value="draft"
                                                >
                                                  <Statistic
                                                    decimalSeparator="."
                                                    getPrefixCls={[Function]}
                                                    groupSeparator=","
                                                    id="status"
                                                    onChange={[Function]}
                                                    prefixCls="ant-statistic"
                                                    renderEmpty={[Function]}
                                                    value="draft"
                                                  >
                                                    <div
                                                      className="ant-statistic"
                                                    >
                                                      <div
                                                        className="ant-statistic-content"
                                                      >
                                                        <StatisticNumber
                                                          decimalSeparator="."
                                                          getPrefixCls={[Function]}
                                                          groupSeparator=","
                                                          id="status"
                                                          onChange={[Function]}
                                                          prefixCls="ant-statistic"
                                                          renderEmpty={[Function]}
                                                          value="draft"
                                                        >
                                                          <span
                                                            className="ant-statistic-content-value"
                                                          >
                                                            draft
                                                          </span>
                                                        </StatisticNumber>
                                                      </div>
                                                    </div>
                                                  </Statistic>
                                                </withConfigConsumer(Statistic)>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            label="Image"
                            name="featured_medium_id"
                          >
                            <WrapperField
                              label="Image"
                              messageVariables={
                                Object {
                                  "label": "Image",
                                }
                              }
                              name="featured_medium_id"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_featured_medium_id"
                                label="Image"
                                messageVariables={
                                  Object {
                                    "label": "Image",
                                  }
                                }
                                name={
                                  Array [
                                    "featured_medium_id",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="featured_medium_id"
                                      label="Image"
                                      name="featured_medium_id"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="featured_medium_id"
                                            title="Image"
                                          >
                                            Image
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Image"
                                      name={
                                        Array [
                                          "featured_medium_id",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                                value={1}
                                              >
                                                <MediaSelector
                                                  id="featured_medium_id"
                                                  onChange={[Function]}
                                                  value={1}
                                                >
                                                  <Modal
                                                    closable={false}
                                                    confirmLoading={false}
                                                    footer={
                                                      Array [
                                                        <ForwardRef(InternalButton)
                                                          block={false}
                                                          ghost={false}
                                                          htmlType="button"
                                                          loading={false}
                                                          onClick={[Function]}
                                                        >
                                                          Return
                                                        </ForwardRef(InternalButton)>,
                                                        <ForwardRef(InternalButton)
                                                          block={false}
                                                          disabled={true}
                                                          ghost={false}
                                                          htmlType="button"
                                                          loading={false}
                                                          onClick={[Function]}
                                                          type="primary"
                                                        >
                                                           Select
                                                        </ForwardRef(InternalButton)>,
                                                      ]
                                                    }
                                                    maskTransitionName="fade"
                                                    okType="primary"
                                                    onCancel={[Function]}
                                                    transitionName="zoom"
                                                    visible={false}
                                                    width="800px"
                                                  >
                                                    <Component
                                                      closable={false}
                                                      closeIcon={
                                                        <span
                                                          className="ant-modal-close-x"
                                                        >
                                                          <ForwardRef(CloseOutlined)
                                                            className="ant-modal-close-icon"
                                                          />
                                                        </span>
                                                      }
                                                      confirmLoading={false}
                                                      footer={
                                                        Array [
                                                          <ForwardRef(InternalButton)
                                                            block={false}
                                                            ghost={false}
                                                            htmlType="button"
                                                            loading={false}
                                                            onClick={[Function]}
                                                          >
                                                            Return
                                                          </ForwardRef(InternalButton)>,
                                                          <ForwardRef(InternalButton)
                                                            block={false}
                                                            disabled={true}
                                                            ghost={false}
                                                            htmlType="button"
                                                            loading={false}
                                                            onClick={[Function]}
                                                            type="primary"
                                                          >
                                                             Select
                                                          </ForwardRef(InternalButton)>,
                                                        ]
                                                      }
                                                      maskTransitionName="fade"
                                                      okType="primary"
                                                      onCancel={[Function]}
                                                      onClose={[Function]}
                                                      prefixCls="ant-modal"
                                                      transitionName="zoom"
                                                      visible={false}
                                                      width="800px"
                                                      wrapClassName=""
                                                    >
                                                      <PortalWrapper
                                                        visible={false}
                                                      />
                                                    </Component>
                                                  </Modal>
                                                  <Space
                                                    direction="vertical"
                                                  >
                                                    <div
                                                      className="ant-space ant-space-vertical"
                                                    >
                                                      <div
                                                        className="ant-space-item"
                                                        key="ant-space-item-0"
                                                        style={
                                                          Object {
                                                            "marginBottom": 8,
                                                          }
                                                        }
                                                      >
                                                        <img
                                                          width="100%"
                                                        />
                                                      </div>
                                                      <div
                                                        className="ant-space-item"
                                                        key="ant-space-item-1"
                                                        style={Object {}}
                                                      >
                                                        <Button
                                                          block={false}
                                                          ghost={false}
                                                          htmlType="button"
                                                          loading={false}
                                                          onClick={[Function]}
                                                        >
                                                          <Wave>
                                                            <button
                                                              className="ant-btn"
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <LoadingIcon
                                                                existIcon={false}
                                                                loading={false}
                                                                prefixCls="ant-btn"
                                                              >
                                                                <ForwardRef
                                                                  motionName="ant-btn-loading-icon-motion"
                                                                  onAppearActive={[Function]}
                                                                  onAppearStart={[Function]}
                                                                  onEnterActive={[Function]}
                                                                  onEnterStart={[Function]}
                                                                  onLeaveActive={[Function]}
                                                                  onLeaveStart={[Function]}
                                                                  removeOnLeave={true}
                                                                  visible={false}
                                                                >
                                                                  <CSSMotion
                                                                    internalRef={null}
                                                                    motionAppear={true}
                                                                    motionEnter={true}
                                                                    motionLeave={true}
                                                                    motionName="ant-btn-loading-icon-motion"
                                                                    onAppearActive={[Function]}
                                                                    onAppearStart={[Function]}
                                                                    onEnterActive={[Function]}
                                                                    onEnterStart={[Function]}
                                                                    onLeaveActive={[Function]}
                                                                    onLeaveStart={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  />
                                                                </ForwardRef>
                                                              </LoadingIcon>
                                                              <span
                                                                key=".0"
                                                              >
                                                                Select
                                                              </span>
                                                            </button>
                                                          </Wave>
                                                        </Button>
                                                      </div>
                                                    </div>
                                                  </Space>
                                                </MediaSelector>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            label="Slug"
                            name="slug"
                            rules={
                              Array [
                                Object {
                                  "message": "Please input the slug!",
                                  "required": true,
                                },
                                Object {
                                  "message": "Please enter valid slug!",
                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                },
                              ]
                            }
                          >
                            <WrapperField
                              label="Slug"
                              messageVariables={
                                Object {
                                  "label": "Slug",
                                }
                              }
                              name="slug"
                              onReset={[Function]}
                              rules={
                                Array [
                                  Object {
                                    "message": "Please input the slug!",
                                    "required": true,
                                  },
                                  Object {
                                    "message": "Please enter valid slug!",
                                    "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                  },
                                ]
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_slug"
                                label="Slug"
                                messageVariables={
                                  Object {
                                    "label": "Slug",
                                  }
                                }
                                name={
                                  Array [
                                    "slug",
                                  ]
                                }
                                onReset={[Function]}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the slug!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Please enter valid slug!",
                                      "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                    },
                                  ]
                                }
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="slug"
                                      label="Slug"
                                      name="slug"
                                      prefixCls="ant-form"
                                      required={true}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please input the slug!",
                                            "required": true,
                                          },
                                          Object {
                                            "message": "Please enter valid slug!",
                                            "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                          },
                                        ]
                                      }
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className="ant-form-item-required"
                                            htmlFor="slug"
                                            title="Slug"
                                          >
                                            Slug
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Slug"
                                      name={
                                        Array [
                                          "slug",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please input the slug!",
                                            "required": true,
                                          },
                                          Object {
                                            "message": "Please enter valid slug!",
                                            "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                          },
                                        ]
                                      }
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                                value="post-1"
                                              >
                                                <Input
                                                  id="slug"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value="post-1"
                                                >
                                                  <ClearableLabeledInput
                                                    bordered={true}
                                                    element={
                                                      <input
                                                        className="ant-input"
                                                        id="slug"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        type="text"
                                                        value="post-1"
                                                      />
                                                    }
                                                    focused={false}
                                                    handleReset={[Function]}
                                                    id="slug"
                                                    inputType="input"
                                                    onChange={[Function]}
                                                    prefixCls="ant-input"
                                                    triggerFocus={[Function]}
                                                    type="text"
                                                    value="post-1"
                                                  >
                                                    <input
                                                      className="ant-input"
                                                      id="slug"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      type="text"
                                                      value="post-1"
                                                    />
                                                  </ClearableLabeledInput>
                                                </Input>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            label="Categories"
                            name="categories"
                          >
                            <WrapperField
                              label="Categories"
                              messageVariables={
                                Object {
                                  "label": "Categories",
                                }
                              }
                              name="categories"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_categories"
                                label="Categories"
                                messageVariables={
                                  Object {
                                    "label": "Categories",
                                  }
                                }
                                name={
                                  Array [
                                    "categories",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="categories"
                                      label="Categories"
                                      name="categories"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="categories"
                                            title="Categories"
                                          >
                                            Categories
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Categories"
                                      name={
                                        Array [
                                          "categories",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                                value={
                                                  Array [
                                                    1,
                                                  ]
                                                }
                                              >
                                                <Selector
                                                  action="Categories"
                                                  id="categories"
                                                  key="true"
                                                  mode="multiple"
                                                  onChange={[Function]}
                                                  value={
                                                    Array [
                                                      1,
                                                    ]
                                                  }
                                                >
                                                  <Select
                                                    bordered={true}
                                                    choiceTransitionName=""
                                                    defaultValue={
                                                      Array [
                                                        1,
                                                      ]
                                                    }
                                                    filterOption={[Function]}
                                                    listHeight={128}
                                                    loading={false}
                                                    mode="multiple"
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Select categories"
                                                    transitionName="slide-up"
                                                  >
                                                    <Select
                                                      choiceTransitionName=""
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={
                                                        Array [
                                                          1,
                                                        ]
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Select categories"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      transitionName="slide-up"
                                                    >
                                                      <ForwardRef(Select)
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={
                                                          Array [
                                                            1,
                                                          ]
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        inputIcon={[Function]}
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        mode="multiple"
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        placeholder="Select categories"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                      >
                                                        <div
                                                          className="ant-select ant-select-multiple ant-select-show-search"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SelectTrigger
                                                            containerWidth={null}
                                                            dropdownClassName=""
                                                            empty={true}
                                                            getTriggerDOMNode={[Function]}
                                                            popupElement={
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={true}
                                                                flattenOptions={Array []}
                                                                height={128}
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onScroll={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={Array []}
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={
                                                                  Set {
                                                                    1,
                                                                  }
                                                                }
                                                                virtual={true}
                                                              />
                                                            }
                                                            prefixCls="ant-select"
                                                            transitionName="slide-up"
                                                          >
                                                            <Trigger
                                                              action={Array []}
                                                              afterPopupVisibleChange={[Function]}
                                                              autoDestroy={false}
                                                              blurDelay={0.15}
                                                              builtinPlacements={
                                                                Object {
                                                                  "bottomLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tl",
                                                                      "bl",
                                                                    ],
                                                                  },
                                                                  "bottomRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tr",
                                                                      "br",
                                                                    ],
                                                                  },
                                                                  "topLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "bl",
                                                                      "tl",
                                                                    ],
                                                                  },
                                                                  "topRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "br",
                                                                      "tr",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              defaultPopupVisible={false}
                                                              destroyPopupOnHide={false}
                                                              focusDelay={0}
                                                              getDocument={[Function]}
                                                              getPopupClassNameFromAlign={[Function]}
                                                              getTriggerDOMNode={[Function]}
                                                              hideAction={Array []}
                                                              mask={false}
                                                              maskClosable={true}
                                                              mouseEnterDelay={0}
                                                              mouseLeaveDelay={0.1}
                                                              onPopupAlign={[Function]}
                                                              onPopupVisibleChange={[Function]}
                                                              popup={
                                                                <div>
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={Array []}
                                                                    height={128}
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onScroll={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={Array []}
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={
                                                                      Set {
                                                                        1,
                                                                      }
                                                                    }
                                                                    virtual={true}
                                                                  />
                                                                </div>
                                                              }
                                                              popupAlign={Object {}}
                                                              popupClassName="ant-select-dropdown-empty"
                                                              popupPlacement="bottomLeft"
                                                              popupStyle={
                                                                Object {
                                                                  "minWidth": null,
                                                                  "width": null,
                                                                }
                                                              }
                                                              popupTransitionName="slide-up"
                                                              prefixCls="ant-select-dropdown"
                                                              showAction={Array []}
                                                            >
                                                              <Selector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                choiceTransitionName=""
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={
                                                                  Array [
                                                                    1,
                                                                  ]
                                                                }
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-item"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-item-content"
                                                                        >
                                                                          1
                                                                        </span>
                                                                        <span
                                                                          aria-hidden="true"
                                                                          class="ant-select-selection-item-remove"
                                                                          style="user-select: none;"
                                                                          unselectable="on"
                                                                        >
                                                                          <span
                                                                            aria-label="close"
                                                                            class="anticon anticon-close"
                                                                            role="img"
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              class=""
                                                                              data-icon="close"
                                                                              fill="currentColor"
                                                                              focusable="false"
                                                                              height="1em"
                                                                              viewBox="64 64 896 896"
                                                                              width="1em"
                                                                            >
                                                                              <path
                                                                                d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                              />
                                                                            </svg>
                                                                          </span>
                                                                        </span>
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                        style="width: 0px;"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                        <span
                                                                          aria-hidden="true"
                                                                          class="ant-select-selection-search-mirror"
                                                                        >
                                                                          
                                                                           
                                                                        </span>
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                key="trigger"
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                mode="multiple"
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="Select categories"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={true}
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                values={
                                                                  Array [
                                                                    Object {
                                                                      "disabled": undefined,
                                                                      "key": 1,
                                                                      "label": 1,
                                                                      "value": 1,
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <div
                                                                  className="ant-select-selector"
                                                                  onMouseDown={[Function]}
                                                                >
                                                                  <SelectSelector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    choiceTransitionName=""
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue={
                                                                      Array [
                                                                        1,
                                                                      ]
                                                                    }
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-item"
                                                                          >
                                                                            <span
                                                                              class="ant-select-selection-item-content"
                                                                            >
                                                                              1
                                                                            </span>
                                                                            <span
                                                                              aria-hidden="true"
                                                                              class="ant-select-selection-item-remove"
                                                                              style="user-select: none;"
                                                                              unselectable="on"
                                                                            >
                                                                              <span
                                                                                aria-label="close"
                                                                                class="anticon anticon-close"
                                                                                role="img"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  class=""
                                                                                  data-icon="close"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                  />
                                                                                </svg>
                                                                              </span>
                                                                            </span>
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                            style="width: 0px;"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                            <span
                                                                              aria-hidden="true"
                                                                              class="ant-select-selection-search-mirror"
                                                                            >
                                                                              
                                                                               
                                                                            </span>
                                                                          </span>
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    filterOption={[Function]}
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    inputRef={
                                                                      Object {
                                                                        "current": <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />,
                                                                      }
                                                                    }
                                                                    listHeight={128}
                                                                    listItemHeight={24}
                                                                    loading={false}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    mode="multiple"
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onInputChange={[Function]}
                                                                    onInputCompositionEnd={[Function]}
                                                                    onInputCompositionStart={[Function]}
                                                                    onInputKeyDown={[Function]}
                                                                    onInputMouseDown={[Function]}
                                                                    onInputPaste={[Function]}
                                                                    onPopupScroll={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    placeholder="Select categories"
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={true}
                                                                    tokenWithEnter={false}
                                                                    transitionName="slide-up"
                                                                    values={
                                                                      Array [
                                                                        Object {
                                                                          "disabled": undefined,
                                                                          "key": 1,
                                                                          "label": 1,
                                                                          "value": 1,
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <CSSMotionList
                                                                      component={false}
                                                                      keys={
                                                                        Array [
                                                                          Object {
                                                                            "disabled": undefined,
                                                                            "key": 1,
                                                                            "label": 1,
                                                                            "value": 1,
                                                                          },
                                                                        ]
                                                                      }
                                                                      motionAppear={false}
                                                                      motionName=""
                                                                    >
                                                                      <ForwardRef
                                                                        eventProps={
                                                                          Object {
                                                                            "disabled": undefined,
                                                                            "key": "1",
                                                                            "label": 1,
                                                                            "value": 1,
                                                                          }
                                                                        }
                                                                        key="1"
                                                                        motionAppear={false}
                                                                        motionName=""
                                                                        onLeaveEnd={[Function]}
                                                                        visible={true}
                                                                      >
                                                                        <CSSMotion
                                                                          eventProps={
                                                                            Object {
                                                                              "disabled": undefined,
                                                                              "key": "1",
                                                                              "label": 1,
                                                                              "value": 1,
                                                                            }
                                                                          }
                                                                          internalRef={null}
                                                                          motionAppear={false}
                                                                          motionEnter={true}
                                                                          motionLeave={true}
                                                                          motionName=""
                                                                          onLeaveEnd={[Function]}
                                                                          removeOnLeave={true}
                                                                          visible={true}
                                                                        >
                                                                          <span
                                                                            className="ant-select-selection-item"
                                                                            key="1"
                                                                          >
                                                                            <span
                                                                              className="ant-select-selection-item-content"
                                                                            >
                                                                              1
                                                                            </span>
                                                                            <TransBtn
                                                                              className="ant-select-selection-item-remove"
                                                                              customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                              onClick={[Function]}
                                                                              onMouseDown={[Function]}
                                                                            >
                                                                              <span
                                                                                aria-hidden={true}
                                                                                className="ant-select-selection-item-remove"
                                                                                onClick={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                style={
                                                                                  Object {
                                                                                    "WebkitUserSelect": "none",
                                                                                    "userSelect": "none",
                                                                                  }
                                                                                }
                                                                                unselectable="on"
                                                                              >
                                                                                <ForwardRef(CloseOutlined)>
                                                                                  <AntdIcon
                                                                                    icon={
                                                                                      Object {
                                                                                        "icon": Object {
                                                                                          "attrs": Object {
                                                                                            "focusable": "false",
                                                                                            "viewBox": "64 64 896 896",
                                                                                          },
                                                                                          "children": Array [
                                                                                            Object {
                                                                                              "attrs": Object {
                                                                                                "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                              },
                                                                                              "tag": "path",
                                                                                            },
                                                                                          ],
                                                                                          "tag": "svg",
                                                                                        },
                                                                                        "name": "close",
                                                                                        "theme": "outlined",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <span
                                                                                      aria-label="close"
                                                                                      className="anticon anticon-close"
                                                                                      role="img"
                                                                                    >
                                                                                      <IconReact
                                                                                        className=""
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close",
                                                                                            "theme": "outlined",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden="true"
                                                                                          className=""
                                                                                          data-icon="close"
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height="1em"
                                                                                          key="svg-close"
                                                                                          viewBox="64 64 896 896"
                                                                                          width="1em"
                                                                                        >
                                                                                          <path
                                                                                            d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                            key="svg-close-svg-0"
                                                                                          />
                                                                                        </svg>
                                                                                      </IconReact>
                                                                                    </span>
                                                                                  </AntdIcon>
                                                                                </ForwardRef(CloseOutlined)>
                                                                              </span>
                                                                            </TransBtn>
                                                                          </span>
                                                                        </CSSMotion>
                                                                      </ForwardRef>
                                                                    </CSSMotionList>
                                                                    <span
                                                                      className="ant-select-selection-search"
                                                                      style={
                                                                        Object {
                                                                          "width": 0,
                                                                        }
                                                                      }
                                                                    >
                                                                      <Input
                                                                        accessibilityIndex={0}
                                                                        attrs={Object {}}
                                                                        inputElement={null}
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        prefixCls="ant-select"
                                                                        value=""
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="undefined_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="undefined_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="undefined_list"
                                                                          autoComplete="off"
                                                                          className="ant-select-selection-search-input"
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          readOnly={true}
                                                                          role="combobox"
                                                                          style={
                                                                            Object {
                                                                              "opacity": 0,
                                                                            }
                                                                          }
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </Input>
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-selection-search-mirror"
                                                                      >
                                                                         
                                                                      </span>
                                                                    </span>
                                                                  </SelectSelector>
                                                                </div>
                                                              </Selector>
                                                            </Trigger>
                                                          </SelectTrigger>
                                                        </div>
                                                      </ForwardRef(Select)>
                                                    </Select>
                                                  </Select>
                                                </Selector>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem>
                            <Row
                              className="ant-form-item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  prefixCls="ant-form"
                                />
                                <FormItemInput
                                  errors={Array []}
                                  onDomErrorVisibleChange={[Function]}
                                  prefixCls="ant-form"
                                  validateStatus=""
                                >
                                  <Col
                                    className="ant-form-item-control"
                                  >
                                    <div
                                      className="ant-col ant-form-item-control"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Row
                                            gutter={8}
                                          >
                                            <div
                                              className="ant-row"
                                              style={
                                                Object {
                                                  "marginLeft": -4,
                                                  "marginRight": -4,
                                                }
                                              }
                                            >
                                              <Col
                                                span={18}
                                              >
                                                <div
                                                  className="ant-col ant-col-18"
                                                  style={
                                                    Object {
                                                      "paddingLeft": 4,
                                                      "paddingRight": 4,
                                                    }
                                                  }
                                                >
                                                  <Input
                                                    onChange={[Function]}
                                                    placeholder="category name"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <ClearableLabeledInput
                                                      bordered={true}
                                                      element={
                                                        <input
                                                          className="ant-input"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          placeholder="category name"
                                                          type="text"
                                                          value=""
                                                        />
                                                      }
                                                      focused={false}
                                                      handleReset={[Function]}
                                                      inputType="input"
                                                      onChange={[Function]}
                                                      placeholder="category name"
                                                      prefixCls="ant-input"
                                                      triggerFocus={[Function]}
                                                      type="text"
                                                      value=""
                                                    >
                                                      <input
                                                        className="ant-input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="category name"
                                                        type="text"
                                                        value=""
                                                      />
                                                    </ClearableLabeledInput>
                                                  </Input>
                                                </div>
                                              </Col>
                                              <Col
                                                span={6}
                                              >
                                                <div
                                                  className="ant-col ant-col-6"
                                                  style={
                                                    Object {
                                                      "paddingLeft": 4,
                                                      "paddingRight": 4,
                                                    }
                                                  }
                                                >
                                                  <Button
                                                    block={true}
                                                    ghost={false}
                                                    htmlType="button"
                                                    loading={false}
                                                    onClick={[Function]}
                                                  >
                                                    <Wave>
                                                      <button
                                                        className="ant-btn ant-btn-block"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <LoadingIcon
                                                          existIcon={false}
                                                          loading={false}
                                                          prefixCls="ant-btn"
                                                        >
                                                          <ForwardRef
                                                            motionName="ant-btn-loading-icon-motion"
                                                            onAppearActive={[Function]}
                                                            onAppearStart={[Function]}
                                                            onEnterActive={[Function]}
                                                            onEnterStart={[Function]}
                                                            onLeaveActive={[Function]}
                                                            onLeaveStart={[Function]}
                                                            removeOnLeave={true}
                                                            visible={false}
                                                          >
                                                            <CSSMotion
                                                              internalRef={null}
                                                              motionAppear={true}
                                                              motionEnter={true}
                                                              motionLeave={true}
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            />
                                                          </ForwardRef>
                                                        </LoadingIcon>
                                                        <span
                                                          key=".0"
                                                        >
                                                          Add
                                                        </span>
                                                      </button>
                                                    </Wave>
                                                  </Button>
                                                </div>
                                              </Col>
                                            </div>
                                          </Row>
                                        </div>
                                      </div>
                                      <ForwardRef
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <CSSMotion
                                          internalRef={null}
                                          motionAppear={true}
                                          motionDeadline={500}
                                          motionEnter={true}
                                          motionLeave={true}
                                          motionName="show-help"
                                          onLeaveEnd={[Function]}
                                          removeOnLeave={true}
                                          visible={false}
                                        />
                                      </ForwardRef>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </FormItem>
                          <FormItem
                            key="true"
                            label="Tags"
                            name="tags"
                          >
                            <WrapperField
                              label="Tags"
                              messageVariables={
                                Object {
                                  "label": "Tags",
                                }
                              }
                              name="tags"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_tags"
                                label="Tags"
                                messageVariables={
                                  Object {
                                    "label": "Tags",
                                  }
                                }
                                name={
                                  Array [
                                    "tags",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="tags"
                                      label="Tags"
                                      name="tags"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="tags"
                                            title="Tags"
                                          >
                                            Tags
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Tags"
                                      name={
                                        Array [
                                          "tags",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                                value={
                                                  Array [
                                                    1,
                                                  ]
                                                }
                                              >
                                                <Selector
                                                  action="Tags"
                                                  id="tags"
                                                  mode="multiple"
                                                  onChange={[Function]}
                                                  value={
                                                    Array [
                                                      1,
                                                    ]
                                                  }
                                                >
                                                  <Select
                                                    bordered={true}
                                                    choiceTransitionName=""
                                                    defaultValue={
                                                      Array [
                                                        1,
                                                      ]
                                                    }
                                                    filterOption={[Function]}
                                                    listHeight={128}
                                                    loading={false}
                                                    mode="multiple"
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Select tags"
                                                    transitionName="slide-up"
                                                  >
                                                    <Select
                                                      choiceTransitionName=""
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={
                                                        Array [
                                                          1,
                                                        ]
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Select tags"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      transitionName="slide-up"
                                                    >
                                                      <ForwardRef(Select)
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={
                                                          Array [
                                                            1,
                                                          ]
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        inputIcon={[Function]}
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        mode="multiple"
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        placeholder="Select tags"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                      >
                                                        <div
                                                          className="ant-select ant-select-multiple ant-select-show-search"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SelectTrigger
                                                            containerWidth={null}
                                                            dropdownClassName=""
                                                            empty={true}
                                                            getTriggerDOMNode={[Function]}
                                                            popupElement={
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={true}
                                                                flattenOptions={Array []}
                                                                height={128}
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onScroll={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={Array []}
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={
                                                                  Set {
                                                                    1,
                                                                  }
                                                                }
                                                                virtual={true}
                                                              />
                                                            }
                                                            prefixCls="ant-select"
                                                            transitionName="slide-up"
                                                          >
                                                            <Trigger
                                                              action={Array []}
                                                              afterPopupVisibleChange={[Function]}
                                                              autoDestroy={false}
                                                              blurDelay={0.15}
                                                              builtinPlacements={
                                                                Object {
                                                                  "bottomLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tl",
                                                                      "bl",
                                                                    ],
                                                                  },
                                                                  "bottomRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tr",
                                                                      "br",
                                                                    ],
                                                                  },
                                                                  "topLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "bl",
                                                                      "tl",
                                                                    ],
                                                                  },
                                                                  "topRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "br",
                                                                      "tr",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              defaultPopupVisible={false}
                                                              destroyPopupOnHide={false}
                                                              focusDelay={0}
                                                              getDocument={[Function]}
                                                              getPopupClassNameFromAlign={[Function]}
                                                              getTriggerDOMNode={[Function]}
                                                              hideAction={Array []}
                                                              mask={false}
                                                              maskClosable={true}
                                                              mouseEnterDelay={0}
                                                              mouseLeaveDelay={0.1}
                                                              onPopupAlign={[Function]}
                                                              onPopupVisibleChange={[Function]}
                                                              popup={
                                                                <div>
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={Array []}
                                                                    height={128}
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onScroll={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={Array []}
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={
                                                                      Set {
                                                                        1,
                                                                      }
                                                                    }
                                                                    virtual={true}
                                                                  />
                                                                </div>
                                                              }
                                                              popupAlign={Object {}}
                                                              popupClassName="ant-select-dropdown-empty"
                                                              popupPlacement="bottomLeft"
                                                              popupStyle={
                                                                Object {
                                                                  "minWidth": null,
                                                                  "width": null,
                                                                }
                                                              }
                                                              popupTransitionName="slide-up"
                                                              prefixCls="ant-select-dropdown"
                                                              showAction={Array []}
                                                            >
                                                              <Selector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                choiceTransitionName=""
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={
                                                                  Array [
                                                                    1,
                                                                  ]
                                                                }
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-item"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-item-content"
                                                                        >
                                                                          1
                                                                        </span>
                                                                        <span
                                                                          aria-hidden="true"
                                                                          class="ant-select-selection-item-remove"
                                                                          style="user-select: none;"
                                                                          unselectable="on"
                                                                        >
                                                                          <span
                                                                            aria-label="close"
                                                                            class="anticon anticon-close"
                                                                            role="img"
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              class=""
                                                                              data-icon="close"
                                                                              fill="currentColor"
                                                                              focusable="false"
                                                                              height="1em"
                                                                              viewBox="64 64 896 896"
                                                                              width="1em"
                                                                            >
                                                                              <path
                                                                                d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                              />
                                                                            </svg>
                                                                          </span>
                                                                        </span>
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                        style="width: 0px;"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                        <span
                                                                          aria-hidden="true"
                                                                          class="ant-select-selection-search-mirror"
                                                                        >
                                                                          
                                                                           
                                                                        </span>
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                key="trigger"
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                mode="multiple"
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="Select tags"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={true}
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                values={
                                                                  Array [
                                                                    Object {
                                                                      "disabled": undefined,
                                                                      "key": 1,
                                                                      "label": 1,
                                                                      "value": 1,
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <div
                                                                  className="ant-select-selector"
                                                                  onMouseDown={[Function]}
                                                                >
                                                                  <SelectSelector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    choiceTransitionName=""
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue={
                                                                      Array [
                                                                        1,
                                                                      ]
                                                                    }
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-item"
                                                                          >
                                                                            <span
                                                                              class="ant-select-selection-item-content"
                                                                            >
                                                                              1
                                                                            </span>
                                                                            <span
                                                                              aria-hidden="true"
                                                                              class="ant-select-selection-item-remove"
                                                                              style="user-select: none;"
                                                                              unselectable="on"
                                                                            >
                                                                              <span
                                                                                aria-label="close"
                                                                                class="anticon anticon-close"
                                                                                role="img"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  class=""
                                                                                  data-icon="close"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                  />
                                                                                </svg>
                                                                              </span>
                                                                            </span>
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                            style="width: 0px;"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                            <span
                                                                              aria-hidden="true"
                                                                              class="ant-select-selection-search-mirror"
                                                                            >
                                                                              
                                                                               
                                                                            </span>
                                                                          </span>
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    filterOption={[Function]}
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    inputRef={
                                                                      Object {
                                                                        "current": <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />,
                                                                      }
                                                                    }
                                                                    listHeight={128}
                                                                    listItemHeight={24}
                                                                    loading={false}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    mode="multiple"
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onInputChange={[Function]}
                                                                    onInputCompositionEnd={[Function]}
                                                                    onInputCompositionStart={[Function]}
                                                                    onInputKeyDown={[Function]}
                                                                    onInputMouseDown={[Function]}
                                                                    onInputPaste={[Function]}
                                                                    onPopupScroll={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    placeholder="Select tags"
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={true}
                                                                    tokenWithEnter={false}
                                                                    transitionName="slide-up"
                                                                    values={
                                                                      Array [
                                                                        Object {
                                                                          "disabled": undefined,
                                                                          "key": 1,
                                                                          "label": 1,
                                                                          "value": 1,
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <CSSMotionList
                                                                      component={false}
                                                                      keys={
                                                                        Array [
                                                                          Object {
                                                                            "disabled": undefined,
                                                                            "key": 1,
                                                                            "label": 1,
                                                                            "value": 1,
                                                                          },
                                                                        ]
                                                                      }
                                                                      motionAppear={false}
                                                                      motionName=""
                                                                    >
                                                                      <ForwardRef
                                                                        eventProps={
                                                                          Object {
                                                                            "disabled": undefined,
                                                                            "key": "1",
                                                                            "label": 1,
                                                                            "value": 1,
                                                                          }
                                                                        }
                                                                        key="1"
                                                                        motionAppear={false}
                                                                        motionName=""
                                                                        onLeaveEnd={[Function]}
                                                                        visible={true}
                                                                      >
                                                                        <CSSMotion
                                                                          eventProps={
                                                                            Object {
                                                                              "disabled": undefined,
                                                                              "key": "1",
                                                                              "label": 1,
                                                                              "value": 1,
                                                                            }
                                                                          }
                                                                          internalRef={null}
                                                                          motionAppear={false}
                                                                          motionEnter={true}
                                                                          motionLeave={true}
                                                                          motionName=""
                                                                          onLeaveEnd={[Function]}
                                                                          removeOnLeave={true}
                                                                          visible={true}
                                                                        >
                                                                          <span
                                                                            className="ant-select-selection-item"
                                                                            key="1"
                                                                          >
                                                                            <span
                                                                              className="ant-select-selection-item-content"
                                                                            >
                                                                              1
                                                                            </span>
                                                                            <TransBtn
                                                                              className="ant-select-selection-item-remove"
                                                                              customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                              onClick={[Function]}
                                                                              onMouseDown={[Function]}
                                                                            >
                                                                              <span
                                                                                aria-hidden={true}
                                                                                className="ant-select-selection-item-remove"
                                                                                onClick={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                style={
                                                                                  Object {
                                                                                    "WebkitUserSelect": "none",
                                                                                    "userSelect": "none",
                                                                                  }
                                                                                }
                                                                                unselectable="on"
                                                                              >
                                                                                <ForwardRef(CloseOutlined)>
                                                                                  <AntdIcon
                                                                                    icon={
                                                                                      Object {
                                                                                        "icon": Object {
                                                                                          "attrs": Object {
                                                                                            "focusable": "false",
                                                                                            "viewBox": "64 64 896 896",
                                                                                          },
                                                                                          "children": Array [
                                                                                            Object {
                                                                                              "attrs": Object {
                                                                                                "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                              },
                                                                                              "tag": "path",
                                                                                            },
                                                                                          ],
                                                                                          "tag": "svg",
                                                                                        },
                                                                                        "name": "close",
                                                                                        "theme": "outlined",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <span
                                                                                      aria-label="close"
                                                                                      className="anticon anticon-close"
                                                                                      role="img"
                                                                                    >
                                                                                      <IconReact
                                                                                        className=""
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close",
                                                                                            "theme": "outlined",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden="true"
                                                                                          className=""
                                                                                          data-icon="close"
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height="1em"
                                                                                          key="svg-close"
                                                                                          viewBox="64 64 896 896"
                                                                                          width="1em"
                                                                                        >
                                                                                          <path
                                                                                            d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                            key="svg-close-svg-0"
                                                                                          />
                                                                                        </svg>
                                                                                      </IconReact>
                                                                                    </span>
                                                                                  </AntdIcon>
                                                                                </ForwardRef(CloseOutlined)>
                                                                              </span>
                                                                            </TransBtn>
                                                                          </span>
                                                                        </CSSMotion>
                                                                      </ForwardRef>
                                                                    </CSSMotionList>
                                                                    <span
                                                                      className="ant-select-selection-search"
                                                                      style={
                                                                        Object {
                                                                          "width": 0,
                                                                        }
                                                                      }
                                                                    >
                                                                      <Input
                                                                        accessibilityIndex={0}
                                                                        attrs={Object {}}
                                                                        inputElement={null}
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        prefixCls="ant-select"
                                                                        value=""
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="undefined_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="undefined_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="undefined_list"
                                                                          autoComplete="off"
                                                                          className="ant-select-selection-search-input"
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          readOnly={true}
                                                                          role="combobox"
                                                                          style={
                                                                            Object {
                                                                              "opacity": 0,
                                                                            }
                                                                          }
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </Input>
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-selection-search-mirror"
                                                                      >
                                                                         
                                                                      </span>
                                                                    </span>
                                                                  </SelectSelector>
                                                                </div>
                                                              </Selector>
                                                            </Trigger>
                                                          </SelectTrigger>
                                                        </div>
                                                      </ForwardRef(Select)>
                                                    </Select>
                                                  </Select>
                                                </Selector>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem>
                            <Row
                              className="ant-form-item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  prefixCls="ant-form"
                                />
                                <FormItemInput
                                  errors={Array []}
                                  onDomErrorVisibleChange={[Function]}
                                  prefixCls="ant-form"
                                  validateStatus=""
                                >
                                  <Col
                                    className="ant-form-item-control"
                                  >
                                    <div
                                      className="ant-col ant-form-item-control"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Row
                                            gutter={8}
                                          >
                                            <div
                                              className="ant-row"
                                              style={
                                                Object {
                                                  "marginLeft": -4,
                                                  "marginRight": -4,
                                                }
                                              }
                                            >
                                              <Col
                                                span={18}
                                              >
                                                <div
                                                  className="ant-col ant-col-18"
                                                  style={
                                                    Object {
                                                      "paddingLeft": 4,
                                                      "paddingRight": 4,
                                                    }
                                                  }
                                                >
                                                  <Input
                                                    onChange={[Function]}
                                                    placeholder="tag name"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <ClearableLabeledInput
                                                      bordered={true}
                                                      element={
                                                        <input
                                                          className="ant-input"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          placeholder="tag name"
                                                          type="text"
                                                          value=""
                                                        />
                                                      }
                                                      focused={false}
                                                      handleReset={[Function]}
                                                      inputType="input"
                                                      onChange={[Function]}
                                                      placeholder="tag name"
                                                      prefixCls="ant-input"
                                                      triggerFocus={[Function]}
                                                      type="text"
                                                      value=""
                                                    >
                                                      <input
                                                        className="ant-input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="tag name"
                                                        type="text"
                                                        value=""
                                                      />
                                                    </ClearableLabeledInput>
                                                  </Input>
                                                </div>
                                              </Col>
                                              <Col
                                                span={6}
                                              >
                                                <div
                                                  className="ant-col ant-col-6"
                                                  style={
                                                    Object {
                                                      "paddingLeft": 4,
                                                      "paddingRight": 4,
                                                    }
                                                  }
                                                >
                                                  <Button
                                                    block={true}
                                                    ghost={false}
                                                    htmlType="button"
                                                    loading={false}
                                                    onClick={[Function]}
                                                  >
                                                    <Wave>
                                                      <button
                                                        className="ant-btn ant-btn-block"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <LoadingIcon
                                                          existIcon={false}
                                                          loading={false}
                                                          prefixCls="ant-btn"
                                                        >
                                                          <ForwardRef
                                                            motionName="ant-btn-loading-icon-motion"
                                                            onAppearActive={[Function]}
                                                            onAppearStart={[Function]}
                                                            onEnterActive={[Function]}
                                                            onEnterStart={[Function]}
                                                            onLeaveActive={[Function]}
                                                            onLeaveStart={[Function]}
                                                            removeOnLeave={true}
                                                            visible={false}
                                                          >
                                                            <CSSMotion
                                                              internalRef={null}
                                                              motionAppear={true}
                                                              motionEnter={true}
                                                              motionLeave={true}
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            />
                                                          </ForwardRef>
                                                        </LoadingIcon>
                                                        <span
                                                          key=".0"
                                                        >
                                                          Add
                                                        </span>
                                                      </button>
                                                    </Wave>
                                                  </Button>
                                                </div>
                                              </Col>
                                            </div>
                                          </Row>
                                        </div>
                                      </div>
                                      <ForwardRef
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <CSSMotion
                                          internalRef={null}
                                          motionAppear={true}
                                          motionDeadline={500}
                                          motionEnter={true}
                                          motionLeave={true}
                                          motionName="show-help"
                                          onLeaveEnd={[Function]}
                                          removeOnLeave={true}
                                          visible={false}
                                        />
                                      </ForwardRef>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </FormItem>
                          <FormItem
                            label="Formats"
                            name="format"
                            rules={
                              Array [
                                Object {
                                  "message": "Please add format!",
                                  "required": true,
                                },
                              ]
                            }
                          >
                            <WrapperField
                              label="Formats"
                              messageVariables={
                                Object {
                                  "label": "Formats",
                                }
                              }
                              name="format"
                              onReset={[Function]}
                              rules={
                                Array [
                                  Object {
                                    "message": "Please add format!",
                                    "required": true,
                                  },
                                ]
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_format"
                                label="Formats"
                                messageVariables={
                                  Object {
                                    "label": "Formats",
                                  }
                                }
                                name={
                                  Array [
                                    "format",
                                  ]
                                }
                                onReset={[Function]}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please add format!",
                                      "required": true,
                                    },
                                  ]
                                }
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="format"
                                      label="Formats"
                                      name="format"
                                      prefixCls="ant-form"
                                      required={true}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please add format!",
                                            "required": true,
                                          },
                                        ]
                                      }
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className="ant-form-item-required"
                                            htmlFor="format"
                                            title="Formats"
                                          >
                                            Formats
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Formats"
                                      name={
                                        Array [
                                          "format",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please add format!",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                                value={1}
                                              >
                                                <Selector
                                                  action="Formats"
                                                  id="format"
                                                  onChange={[Function]}
                                                  value={1}
                                                >
                                                  <Select
                                                    bordered={true}
                                                    choiceTransitionName=""
                                                    defaultValue={
                                                      Array [
                                                        1,
                                                      ]
                                                    }
                                                    filterOption={[Function]}
                                                    listHeight={128}
                                                    loading={false}
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Select formats"
                                                    transitionName="slide-up"
                                                  >
                                                    <Select
                                                      choiceTransitionName=""
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={
                                                        Array [
                                                          1,
                                                        ]
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={null}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Select formats"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      transitionName="slide-up"
                                                    >
                                                      <ForwardRef(Select)
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={
                                                          Array [
                                                            1,
                                                          ]
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        inputIcon={[Function]}
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={null}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        placeholder="Select formats"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                      >
                                                        <div
                                                          className="ant-select ant-select-single ant-select-show-arrow"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SelectTrigger
                                                            containerWidth={null}
                                                            dropdownClassName=""
                                                            empty={true}
                                                            getTriggerDOMNode={[Function]}
                                                            popupElement={
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={true}
                                                                flattenOptions={Array []}
                                                                height={128}
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={null}
                                                                multiple={false}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onScroll={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={Array []}
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={
                                                                  Set {
                                                                    1,
                                                                  }
                                                                }
                                                                virtual={true}
                                                              />
                                                            }
                                                            prefixCls="ant-select"
                                                            transitionName="slide-up"
                                                          >
                                                            <Trigger
                                                              action={Array []}
                                                              afterPopupVisibleChange={[Function]}
                                                              autoDestroy={false}
                                                              blurDelay={0.15}
                                                              builtinPlacements={
                                                                Object {
                                                                  "bottomLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tl",
                                                                      "bl",
                                                                    ],
                                                                  },
                                                                  "bottomRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tr",
                                                                      "br",
                                                                    ],
                                                                  },
                                                                  "topLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "bl",
                                                                      "tl",
                                                                    ],
                                                                  },
                                                                  "topRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "br",
                                                                      "tr",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              defaultPopupVisible={false}
                                                              destroyPopupOnHide={false}
                                                              focusDelay={0}
                                                              getDocument={[Function]}
                                                              getPopupClassNameFromAlign={[Function]}
                                                              getTriggerDOMNode={[Function]}
                                                              hideAction={Array []}
                                                              mask={false}
                                                              maskClosable={true}
                                                              mouseEnterDelay={0}
                                                              mouseLeaveDelay={0.1}
                                                              onPopupAlign={[Function]}
                                                              onPopupVisibleChange={[Function]}
                                                              popup={
                                                                <div>
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={Array []}
                                                                    height={128}
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={null}
                                                                    multiple={false}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onScroll={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={Array []}
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={
                                                                      Set {
                                                                        1,
                                                                      }
                                                                    }
                                                                    virtual={true}
                                                                  />
                                                                </div>
                                                              }
                                                              popupAlign={Object {}}
                                                              popupClassName="ant-select-dropdown-empty"
                                                              popupPlacement="bottomLeft"
                                                              popupStyle={
                                                                Object {
                                                                  "minWidth": null,
                                                                  "width": null,
                                                                }
                                                              }
                                                              popupTransitionName="slide-up"
                                                              prefixCls="ant-select-dropdown"
                                                              showAction={Array []}
                                                            >
                                                              <Selector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                choiceTransitionName=""
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={
                                                                  Array [
                                                                    1,
                                                                  ]
                                                                }
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-item"
                                                                        title="1"
                                                                      >
                                                                        1
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                key="trigger"
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={null}
                                                                multiple={false}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="Select formats"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={false}
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                values={
                                                                  Array [
                                                                    Object {
                                                                      "disabled": undefined,
                                                                      "key": 1,
                                                                      "label": 1,
                                                                      "value": 1,
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <div
                                                                  className="ant-select-selector"
                                                                  onMouseDown={[Function]}
                                                                >
                                                                  <SingleSelector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    choiceTransitionName=""
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue={
                                                                      Array [
                                                                        1,
                                                                      ]
                                                                    }
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-item"
                                                                            title="1"
                                                                          >
                                                                            1
                                                                          </span>
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    filterOption={[Function]}
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    inputRef={
                                                                      Object {
                                                                        "current": <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />,
                                                                      }
                                                                    }
                                                                    listHeight={128}
                                                                    listItemHeight={24}
                                                                    loading={false}
                                                                    menuItemSelectedIcon={null}
                                                                    multiple={false}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onInputChange={[Function]}
                                                                    onInputCompositionEnd={[Function]}
                                                                    onInputCompositionStart={[Function]}
                                                                    onInputKeyDown={[Function]}
                                                                    onInputMouseDown={[Function]}
                                                                    onInputPaste={[Function]}
                                                                    onPopupScroll={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    placeholder="Select formats"
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={false}
                                                                    tokenWithEnter={false}
                                                                    transitionName="slide-up"
                                                                    values={
                                                                      Array [
                                                                        Object {
                                                                          "disabled": undefined,
                                                                          "key": 1,
                                                                          "label": 1,
                                                                          "value": 1,
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="ant-select-selection-search"
                                                                    >
                                                                      <Input
                                                                        accessibilityIndex={0}
                                                                        attrs={Object {}}
                                                                        editable={false}
                                                                        inputElement={null}
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        prefixCls="ant-select"
                                                                        value=""
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="undefined_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="undefined_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="undefined_list"
                                                                          autoComplete="off"
                                                                          className="ant-select-selection-search-input"
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          readOnly={true}
                                                                          role="combobox"
                                                                          style={
                                                                            Object {
                                                                              "opacity": 0,
                                                                            }
                                                                          }
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </Input>
                                                                    </span>
                                                                    <span
                                                                      className="ant-select-selection-item"
                                                                      title="1"
                                                                    >
                                                                      1
                                                                    </span>
                                                                  </SingleSelector>
                                                                </div>
                                                              </Selector>
                                                            </Trigger>
                                                          </SelectTrigger>
                                                          <TransBtn
                                                            className="ant-select-arrow"
                                                            customizeIcon={[Function]}
                                                            customizeIconProps={
                                                              Object {
                                                                "focused": false,
                                                                "loading": false,
                                                                "open": undefined,
                                                                "searchValue": "",
                                                                "showSearch": false,
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              aria-hidden={true}
                                                              className="ant-select-arrow"
                                                              onMouseDown={[Function]}
                                                              style={
                                                                Object {
                                                                  "WebkitUserSelect": "none",
                                                                  "userSelect": "none",
                                                                }
                                                              }
                                                              unselectable="on"
                                                            >
                                                              <ForwardRef(DownOutlined)
                                                                className="ant-select-suffix"
                                                              >
                                                                <AntdIcon
                                                                  className="ant-select-suffix"
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "down",
                                                                      "theme": "outlined",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-label="down"
                                                                    className="anticon anticon-down ant-select-suffix"
                                                                    role="img"
                                                                  >
                                                                    <IconReact
                                                                      className=""
                                                                      icon={
                                                                        Object {
                                                                          "icon": Object {
                                                                            "attrs": Object {
                                                                              "focusable": "false",
                                                                              "viewBox": "64 64 896 896",
                                                                            },
                                                                            "children": Array [
                                                                              Object {
                                                                                "attrs": Object {
                                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                },
                                                                                "tag": "path",
                                                                              },
                                                                            ],
                                                                            "tag": "svg",
                                                                          },
                                                                          "name": "down",
                                                                          "theme": "outlined",
                                                                        }
                                                                      }
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        className=""
                                                                        data-icon="down"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height="1em"
                                                                        key="svg-down"
                                                                        viewBox="64 64 896 896"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                          key="svg-down-svg-0"
                                                                        />
                                                                      </svg>
                                                                    </IconReact>
                                                                  </span>
                                                                </AntdIcon>
                                                              </ForwardRef(DownOutlined)>
                                                            </span>
                                                          </TransBtn>
                                                        </div>
                                                      </ForwardRef(Select)>
                                                    </Select>
                                                  </Select>
                                                </Selector>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            label="Authors"
                            name="authors"
                          >
                            <WrapperField
                              label="Authors"
                              messageVariables={
                                Object {
                                  "label": "Authors",
                                }
                              }
                              name="authors"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_authors"
                                label="Authors"
                                messageVariables={
                                  Object {
                                    "label": "Authors",
                                  }
                                }
                                name={
                                  Array [
                                    "authors",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="authors"
                                      label="Authors"
                                      name="authors"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="authors"
                                            title="Authors"
                                          >
                                            Authors
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Authors"
                                      name={
                                        Array [
                                          "authors",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                                value={
                                                  Array [
                                                    1,
                                                  ]
                                                }
                                              >
                                                <Selector
                                                  action="Authors"
                                                  display="email"
                                                  id="authors"
                                                  mode="multiple"
                                                  onChange={[Function]}
                                                  value={
                                                    Array [
                                                      1,
                                                    ]
                                                  }
                                                >
                                                  <Select
                                                    bordered={true}
                                                    choiceTransitionName=""
                                                    defaultValue={
                                                      Array [
                                                        1,
                                                      ]
                                                    }
                                                    filterOption={[Function]}
                                                    listHeight={128}
                                                    loading={false}
                                                    mode="multiple"
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Select authors"
                                                    transitionName="slide-up"
                                                  >
                                                    <Select
                                                      choiceTransitionName=""
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={
                                                        Array [
                                                          1,
                                                        ]
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Select authors"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      transitionName="slide-up"
                                                    >
                                                      <ForwardRef(Select)
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={
                                                          Array [
                                                            1,
                                                          ]
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        inputIcon={[Function]}
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        mode="multiple"
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        placeholder="Select authors"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                      >
                                                        <div
                                                          className="ant-select ant-select-multiple ant-select-show-search"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SelectTrigger
                                                            containerWidth={null}
                                                            dropdownClassName=""
                                                            empty={true}
                                                            getTriggerDOMNode={[Function]}
                                                            popupElement={
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={true}
                                                                flattenOptions={Array []}
                                                                height={128}
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onScroll={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={Array []}
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={
                                                                  Set {
                                                                    1,
                                                                  }
                                                                }
                                                                virtual={true}
                                                              />
                                                            }
                                                            prefixCls="ant-select"
                                                            transitionName="slide-up"
                                                          >
                                                            <Trigger
                                                              action={Array []}
                                                              afterPopupVisibleChange={[Function]}
                                                              autoDestroy={false}
                                                              blurDelay={0.15}
                                                              builtinPlacements={
                                                                Object {
                                                                  "bottomLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tl",
                                                                      "bl",
                                                                    ],
                                                                  },
                                                                  "bottomRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tr",
                                                                      "br",
                                                                    ],
                                                                  },
                                                                  "topLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "bl",
                                                                      "tl",
                                                                    ],
                                                                  },
                                                                  "topRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "br",
                                                                      "tr",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              defaultPopupVisible={false}
                                                              destroyPopupOnHide={false}
                                                              focusDelay={0}
                                                              getDocument={[Function]}
                                                              getPopupClassNameFromAlign={[Function]}
                                                              getTriggerDOMNode={[Function]}
                                                              hideAction={Array []}
                                                              mask={false}
                                                              maskClosable={true}
                                                              mouseEnterDelay={0}
                                                              mouseLeaveDelay={0.1}
                                                              onPopupAlign={[Function]}
                                                              onPopupVisibleChange={[Function]}
                                                              popup={
                                                                <div>
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={Array []}
                                                                    height={128}
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onScroll={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={Array []}
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={
                                                                      Set {
                                                                        1,
                                                                      }
                                                                    }
                                                                    virtual={true}
                                                                  />
                                                                </div>
                                                              }
                                                              popupAlign={Object {}}
                                                              popupClassName="ant-select-dropdown-empty"
                                                              popupPlacement="bottomLeft"
                                                              popupStyle={
                                                                Object {
                                                                  "minWidth": null,
                                                                  "width": null,
                                                                }
                                                              }
                                                              popupTransitionName="slide-up"
                                                              prefixCls="ant-select-dropdown"
                                                              showAction={Array []}
                                                            >
                                                              <Selector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                choiceTransitionName=""
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={
                                                                  Array [
                                                                    1,
                                                                  ]
                                                                }
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-item"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-item-content"
                                                                        >
                                                                          1
                                                                        </span>
                                                                        <span
                                                                          aria-hidden="true"
                                                                          class="ant-select-selection-item-remove"
                                                                          style="user-select: none;"
                                                                          unselectable="on"
                                                                        >
                                                                          <span
                                                                            aria-label="close"
                                                                            class="anticon anticon-close"
                                                                            role="img"
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              class=""
                                                                              data-icon="close"
                                                                              fill="currentColor"
                                                                              focusable="false"
                                                                              height="1em"
                                                                              viewBox="64 64 896 896"
                                                                              width="1em"
                                                                            >
                                                                              <path
                                                                                d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                              />
                                                                            </svg>
                                                                          </span>
                                                                        </span>
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                        style="width: 0px;"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                        <span
                                                                          aria-hidden="true"
                                                                          class="ant-select-selection-search-mirror"
                                                                        >
                                                                          
                                                                           
                                                                        </span>
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                key="trigger"
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                mode="multiple"
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="Select authors"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={true}
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                values={
                                                                  Array [
                                                                    Object {
                                                                      "disabled": undefined,
                                                                      "key": 1,
                                                                      "label": 1,
                                                                      "value": 1,
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <div
                                                                  className="ant-select-selector"
                                                                  onMouseDown={[Function]}
                                                                >
                                                                  <SelectSelector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    choiceTransitionName=""
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue={
                                                                      Array [
                                                                        1,
                                                                      ]
                                                                    }
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-item"
                                                                          >
                                                                            <span
                                                                              class="ant-select-selection-item-content"
                                                                            >
                                                                              1
                                                                            </span>
                                                                            <span
                                                                              aria-hidden="true"
                                                                              class="ant-select-selection-item-remove"
                                                                              style="user-select: none;"
                                                                              unselectable="on"
                                                                            >
                                                                              <span
                                                                                aria-label="close"
                                                                                class="anticon anticon-close"
                                                                                role="img"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  class=""
                                                                                  data-icon="close"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                  />
                                                                                </svg>
                                                                              </span>
                                                                            </span>
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                            style="width: 0px;"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                            <span
                                                                              aria-hidden="true"
                                                                              class="ant-select-selection-search-mirror"
                                                                            >
                                                                              
                                                                               
                                                                            </span>
                                                                          </span>
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    filterOption={[Function]}
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    inputRef={
                                                                      Object {
                                                                        "current": <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />,
                                                                      }
                                                                    }
                                                                    listHeight={128}
                                                                    listItemHeight={24}
                                                                    loading={false}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    mode="multiple"
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onInputChange={[Function]}
                                                                    onInputCompositionEnd={[Function]}
                                                                    onInputCompositionStart={[Function]}
                                                                    onInputKeyDown={[Function]}
                                                                    onInputMouseDown={[Function]}
                                                                    onInputPaste={[Function]}
                                                                    onPopupScroll={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    placeholder="Select authors"
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={true}
                                                                    tokenWithEnter={false}
                                                                    transitionName="slide-up"
                                                                    values={
                                                                      Array [
                                                                        Object {
                                                                          "disabled": undefined,
                                                                          "key": 1,
                                                                          "label": 1,
                                                                          "value": 1,
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <CSSMotionList
                                                                      component={false}
                                                                      keys={
                                                                        Array [
                                                                          Object {
                                                                            "disabled": undefined,
                                                                            "key": 1,
                                                                            "label": 1,
                                                                            "value": 1,
                                                                          },
                                                                        ]
                                                                      }
                                                                      motionAppear={false}
                                                                      motionName=""
                                                                    >
                                                                      <ForwardRef
                                                                        eventProps={
                                                                          Object {
                                                                            "disabled": undefined,
                                                                            "key": "1",
                                                                            "label": 1,
                                                                            "value": 1,
                                                                          }
                                                                        }
                                                                        key="1"
                                                                        motionAppear={false}
                                                                        motionName=""
                                                                        onLeaveEnd={[Function]}
                                                                        visible={true}
                                                                      >
                                                                        <CSSMotion
                                                                          eventProps={
                                                                            Object {
                                                                              "disabled": undefined,
                                                                              "key": "1",
                                                                              "label": 1,
                                                                              "value": 1,
                                                                            }
                                                                          }
                                                                          internalRef={null}
                                                                          motionAppear={false}
                                                                          motionEnter={true}
                                                                          motionLeave={true}
                                                                          motionName=""
                                                                          onLeaveEnd={[Function]}
                                                                          removeOnLeave={true}
                                                                          visible={true}
                                                                        >
                                                                          <span
                                                                            className="ant-select-selection-item"
                                                                            key="1"
                                                                          >
                                                                            <span
                                                                              className="ant-select-selection-item-content"
                                                                            >
                                                                              1
                                                                            </span>
                                                                            <TransBtn
                                                                              className="ant-select-selection-item-remove"
                                                                              customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                              onClick={[Function]}
                                                                              onMouseDown={[Function]}
                                                                            >
                                                                              <span
                                                                                aria-hidden={true}
                                                                                className="ant-select-selection-item-remove"
                                                                                onClick={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                style={
                                                                                  Object {
                                                                                    "WebkitUserSelect": "none",
                                                                                    "userSelect": "none",
                                                                                  }
                                                                                }
                                                                                unselectable="on"
                                                                              >
                                                                                <ForwardRef(CloseOutlined)>
                                                                                  <AntdIcon
                                                                                    icon={
                                                                                      Object {
                                                                                        "icon": Object {
                                                                                          "attrs": Object {
                                                                                            "focusable": "false",
                                                                                            "viewBox": "64 64 896 896",
                                                                                          },
                                                                                          "children": Array [
                                                                                            Object {
                                                                                              "attrs": Object {
                                                                                                "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                              },
                                                                                              "tag": "path",
                                                                                            },
                                                                                          ],
                                                                                          "tag": "svg",
                                                                                        },
                                                                                        "name": "close",
                                                                                        "theme": "outlined",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <span
                                                                                      aria-label="close"
                                                                                      className="anticon anticon-close"
                                                                                      role="img"
                                                                                    >
                                                                                      <IconReact
                                                                                        className=""
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close",
                                                                                            "theme": "outlined",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden="true"
                                                                                          className=""
                                                                                          data-icon="close"
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height="1em"
                                                                                          key="svg-close"
                                                                                          viewBox="64 64 896 896"
                                                                                          width="1em"
                                                                                        >
                                                                                          <path
                                                                                            d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                            key="svg-close-svg-0"
                                                                                          />
                                                                                        </svg>
                                                                                      </IconReact>
                                                                                    </span>
                                                                                  </AntdIcon>
                                                                                </ForwardRef(CloseOutlined)>
                                                                              </span>
                                                                            </TransBtn>
                                                                          </span>
                                                                        </CSSMotion>
                                                                      </ForwardRef>
                                                                    </CSSMotionList>
                                                                    <span
                                                                      className="ant-select-selection-search"
                                                                      style={
                                                                        Object {
                                                                          "width": 0,
                                                                        }
                                                                      }
                                                                    >
                                                                      <Input
                                                                        accessibilityIndex={0}
                                                                        attrs={Object {}}
                                                                        inputElement={null}
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        prefixCls="ant-select"
                                                                        value=""
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="undefined_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="undefined_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="undefined_list"
                                                                          autoComplete="off"
                                                                          className="ant-select-selection-search-input"
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          readOnly={true}
                                                                          role="combobox"
                                                                          style={
                                                                            Object {
                                                                              "opacity": 0,
                                                                            }
                                                                          }
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </Input>
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-selection-search-mirror"
                                                                      >
                                                                         
                                                                      </span>
                                                                    </span>
                                                                  </SelectSelector>
                                                                </div>
                                                              </Selector>
                                                            </Trigger>
                                                          </SelectTrigger>
                                                        </div>
                                                      </ForwardRef(Select)>
                                                    </Select>
                                                  </Select>
                                                </Selector>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                        </div>
                      </Col>
                    </div>
                  </Row>
                </div>
              </div>
            </Space>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PostForm>
</Provider>
`;

exports[`Posts Create Form component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PostForm>
    <Modal
      confirmLoading={false}
      maskTransitionName="fade"
      okType="primary"
      onCancel={[Function]}
      onOk={[Function]}
      transitionName="zoom"
      visible={false}
      width={520}
    >
      <Component
        closeIcon={
          <span
            className="ant-modal-close-x"
          >
            <ForwardRef(CloseOutlined)
              className="ant-modal-close-icon"
            />
          </span>
        }
        confirmLoading={false}
        footer={
          <LocaleReceiver
            componentName="Modal"
            defaultLocale={
              Object {
                "cancelText": "Cancel",
                "justOkText": "OK",
                "okText": "OK",
              }
            }
          >
            [Function]
          </LocaleReceiver>
        }
        maskTransitionName="fade"
        okType="primary"
        onCancel={[Function]}
        onClose={[Function]}
        onOk={[Function]}
        prefixCls="ant-modal"
        transitionName="zoom"
        visible={false}
        width={520}
        wrapClassName=""
      >
        <PortalWrapper
          visible={false}
        />
      </Component>
    </Modal>
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": undefined,
          },
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={Object {}}
      layout="vertical"
      onFinish={[Function]}
      onValuesChange={[Function]}
      style={
        Object {
          "maxWidth": "100%",
          "width": "100%",
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": undefined,
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          initialValues={Object {}}
          onFinish={[Function]}
          onFinishFailed={[Function]}
          onValuesChange={[Function]}
          style={
            Object {
              "maxWidth": "100%",
              "width": "100%",
            }
          }
        >
          <form
            className="ant-form ant-form-vertical"
            onSubmit={[Function]}
            style={
              Object {
                "maxWidth": "100%",
                "width": "100%",
              }
            }
          >
            <Space
              direction="vertical"
            >
              <div
                className="ant-space ant-space-vertical"
              >
                <div
                  className="ant-space-item"
                  key="ant-space-item-0"
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  <FormItem
                    name="status"
                    style={
                      Object {
                        "float": "right",
                      }
                    }
                  >
                    <WrapperField
                      messageVariables={Object {}}
                      name="status"
                      onReset={[Function]}
                      style={
                        Object {
                          "float": "right",
                        }
                      }
                      trigger="onChange"
                      validateTrigger="onChange"
                    >
                      <Field
                        key="_status"
                        messageVariables={Object {}}
                        name={
                          Array [
                            "status",
                          ]
                        }
                        onReset={[Function]}
                        style={
                          Object {
                            "float": "right",
                          }
                        }
                        trigger="onChange"
                        validateTrigger="onChange"
                        valuePropName="value"
                      >
                        <Row
                          className="ant-form-item"
                          key="row"
                          style={
                            Object {
                              "float": "right",
                            }
                          }
                        >
                          <div
                            className="ant-row ant-form-item"
                            style={
                              Object {
                                "float": "right",
                              }
                            }
                          >
                            <FormItemLabel
                              htmlFor="status"
                              name="status"
                              prefixCls="ant-form"
                              required={false}
                              style={
                                Object {
                                  "float": "right",
                                }
                              }
                            />
                            <FormItemInput
                              errors={Array []}
                              name={
                                Array [
                                  "status",
                                ]
                              }
                              onDomErrorVisibleChange={[Function]}
                              prefixCls="ant-form"
                              style={
                                Object {
                                  "float": "right",
                                }
                              }
                              touched={false}
                              validateStatus=""
                              validating={false}
                            >
                              <Col
                                className="ant-form-item-control"
                              >
                                <div
                                  className="ant-col ant-form-item-control"
                                  style={Object {}}
                                >
                                  <div
                                    className="ant-form-item-control-input"
                                  >
                                    <div
                                      className="ant-form-item-control-input-content"
                                    >
                                      <Component
                                        update={1}
                                      >
                                        <Group
                                          compact={true}
                                          id="status"
                                          onChange={[Function]}
                                        >
                                          <span
                                            className="ant-input-group ant-input-group-compact"
                                          >
                                            <Button
                                              block={false}
                                              ghost={false}
                                              htmlType="submit"
                                              icon={<ForwardRef(SaveOutlined) />}
                                              loading={false}
                                              onClick={[Function]}
                                              type="secondary"
                                            >
                                              <Wave>
                                                <button
                                                  className="ant-btn ant-btn-secondary"
                                                  onClick={[Function]}
                                                  type="submit"
                                                >
                                                  <ForwardRef(SaveOutlined)>
                                                    <AntdIcon
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M893.3 293.3L730.7 130.7c-7.5-7.5-16.7-13-26.7-16V112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 184h256v104H384V184zm456 656H184V184h136v136c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V205.8l136 136V840zM512 442c-79.5 0-144 64.5-144 144s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144zm0 224c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "save",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="save"
                                                        className="anticon anticon-save"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M893.3 293.3L730.7 130.7c-7.5-7.5-16.7-13-26.7-16V112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 184h256v104H384V184zm456 656H184V184h136v136c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V205.8l136 136V840zM512 442c-79.5 0-144 64.5-144 144s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144zm0 224c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "save",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="save"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-save"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M893.3 293.3L730.7 130.7c-7.5-7.5-16.7-13-26.7-16V112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 184h256v104H384V184zm456 656H184V184h136v136c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V205.8l136 136V840zM512 442c-79.5 0-144 64.5-144 144s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144zm0 224c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80z"
                                                              key="svg-save-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(SaveOutlined)>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Draft
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                            <Button
                                              block={false}
                                              ghost={false}
                                              htmlType="submit"
                                              icon={<ForwardRef(ToTopOutlined) />}
                                              loading={false}
                                              onClick={[Function]}
                                              type="primary"
                                            >
                                              <Wave>
                                                <button
                                                  className="ant-btn ant-btn-primary"
                                                  onClick={[Function]}
                                                  type="submit"
                                                >
                                                  <ForwardRef(ToTopOutlined)>
                                                    <AntdIcon
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M885 780H165c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zM400 325.7h73.9V664c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V325.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 171a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "to-top",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="to-top"
                                                        className="anticon anticon-to-top"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          className=""
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M885 780H165c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zM400 325.7h73.9V664c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V325.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 171a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "to-top",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className=""
                                                            data-icon="to-top"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-to-top"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M885 780H165c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zM400 325.7h73.9V664c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V325.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 171a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13z"
                                                              key="svg-to-top-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(ToTopOutlined)>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Publish
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                          </span>
                                        </Group>
                                      </Component>
                                    </div>
                                  </div>
                                  <ForwardRef
                                    motionAppear={true}
                                    motionDeadline={500}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  >
                                    <CSSMotion
                                      internalRef={null}
                                      motionAppear={true}
                                      motionDeadline={500}
                                      motionEnter={true}
                                      motionLeave={true}
                                      motionName="show-help"
                                      onLeaveEnd={[Function]}
                                      removeOnLeave={true}
                                      visible={false}
                                    />
                                  </ForwardRef>
                                </div>
                              </Col>
                            </FormItemInput>
                          </div>
                        </Row>
                      </Field>
                    </WrapperField>
                  </FormItem>
                </div>
                <div
                  className="ant-space-item"
                  key="ant-space-item-1"
                  style={Object {}}
                >
                  <Row
                    gutter={16}
                  >
                    <div
                      className="ant-row"
                      style={
                        Object {
                          "marginLeft": -8,
                          "marginRight": -8,
                        }
                      }
                    >
                      <Col
                        span={18}
                      >
                        <div
                          className="ant-col ant-col-18"
                          style={
                            Object {
                              "paddingLeft": 8,
                              "paddingRight": 8,
                            }
                          }
                        >
                          <FormItem
                            label="Title"
                            name="title"
                            rules={
                              Array [
                                Object {
                                  "message": "Please input the title!",
                                  "required": true,
                                },
                                Object {
                                  "message": "Title must be minimum 3 characters.",
                                  "min": 3,
                                },
                                Object {
                                  "max": 150,
                                  "message": "Title must be maximum 150 characters.",
                                },
                              ]
                            }
                          >
                            <WrapperField
                              label="Title"
                              messageVariables={
                                Object {
                                  "label": "Title",
                                }
                              }
                              name="title"
                              onReset={[Function]}
                              rules={
                                Array [
                                  Object {
                                    "message": "Please input the title!",
                                    "required": true,
                                  },
                                  Object {
                                    "message": "Title must be minimum 3 characters.",
                                    "min": 3,
                                  },
                                  Object {
                                    "max": 150,
                                    "message": "Title must be maximum 150 characters.",
                                  },
                                ]
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_title"
                                label="Title"
                                messageVariables={
                                  Object {
                                    "label": "Title",
                                  }
                                }
                                name={
                                  Array [
                                    "title",
                                  ]
                                }
                                onReset={[Function]}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the title!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Title must be minimum 3 characters.",
                                      "min": 3,
                                    },
                                    Object {
                                      "max": 150,
                                      "message": "Title must be maximum 150 characters.",
                                    },
                                  ]
                                }
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="title"
                                      label="Title"
                                      name="title"
                                      prefixCls="ant-form"
                                      required={true}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please input the title!",
                                            "required": true,
                                          },
                                          Object {
                                            "message": "Title must be minimum 3 characters.",
                                            "min": 3,
                                          },
                                          Object {
                                            "max": 150,
                                            "message": "Title must be maximum 150 characters.",
                                          },
                                        ]
                                      }
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className="ant-form-item-required"
                                            htmlFor="title"
                                            title="Title"
                                          >
                                            Title
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Title"
                                      name={
                                        Array [
                                          "title",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please input the title!",
                                            "required": true,
                                          },
                                          Object {
                                            "message": "Title must be minimum 3 characters.",
                                            "min": 3,
                                          },
                                          Object {
                                            "max": 150,
                                            "message": "Title must be maximum 150 characters.",
                                          },
                                        ]
                                      }
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                              >
                                                <Input
                                                  id="title"
                                                  onChange={[Function]}
                                                  placeholder="title"
                                                  type="text"
                                                >
                                                  <ClearableLabeledInput
                                                    bordered={true}
                                                    element={
                                                      <input
                                                        className="ant-input"
                                                        id="title"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="title"
                                                        type="text"
                                                      />
                                                    }
                                                    focused={false}
                                                    handleReset={[Function]}
                                                    id="title"
                                                    inputType="input"
                                                    onChange={[Function]}
                                                    placeholder="title"
                                                    prefixCls="ant-input"
                                                    triggerFocus={[Function]}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="ant-input"
                                                      id="title"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      placeholder="title"
                                                      type="text"
                                                      value=""
                                                    />
                                                  </ClearableLabeledInput>
                                                </Input>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            label="Excerpt"
                            name="excerpt"
                            rules={
                              Array [
                                Object {
                                  "message": "Please input excerpt!",
                                  "required": true,
                                },
                                Object {
                                  "message": "Title must be minimum 3 characters.",
                                  "min": 3,
                                },
                                Object {
                                  "max": 300,
                                  "message": "Title must be maximum 300 characters.",
                                },
                              ]
                            }
                          >
                            <WrapperField
                              label="Excerpt"
                              messageVariables={
                                Object {
                                  "label": "Excerpt",
                                }
                              }
                              name="excerpt"
                              onReset={[Function]}
                              rules={
                                Array [
                                  Object {
                                    "message": "Please input excerpt!",
                                    "required": true,
                                  },
                                  Object {
                                    "message": "Title must be minimum 3 characters.",
                                    "min": 3,
                                  },
                                  Object {
                                    "max": 300,
                                    "message": "Title must be maximum 300 characters.",
                                  },
                                ]
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_excerpt"
                                label="Excerpt"
                                messageVariables={
                                  Object {
                                    "label": "Excerpt",
                                  }
                                }
                                name={
                                  Array [
                                    "excerpt",
                                  ]
                                }
                                onReset={[Function]}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input excerpt!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Title must be minimum 3 characters.",
                                      "min": 3,
                                    },
                                    Object {
                                      "max": 300,
                                      "message": "Title must be maximum 300 characters.",
                                    },
                                  ]
                                }
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="excerpt"
                                      label="Excerpt"
                                      name="excerpt"
                                      prefixCls="ant-form"
                                      required={true}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please input excerpt!",
                                            "required": true,
                                          },
                                          Object {
                                            "message": "Title must be minimum 3 characters.",
                                            "min": 3,
                                          },
                                          Object {
                                            "max": 300,
                                            "message": "Title must be maximum 300 characters.",
                                          },
                                        ]
                                      }
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className="ant-form-item-required"
                                            htmlFor="excerpt"
                                            title="Excerpt"
                                          >
                                            Excerpt
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Excerpt"
                                      name={
                                        Array [
                                          "excerpt",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please input excerpt!",
                                            "required": true,
                                          },
                                          Object {
                                            "message": "Title must be minimum 3 characters.",
                                            "min": 3,
                                          },
                                          Object {
                                            "max": 300,
                                            "message": "Title must be maximum 300 characters.",
                                          },
                                        ]
                                      }
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                              >
                                                <TextArea
                                                  id="excerpt"
                                                  onChange={[Function]}
                                                  placeholder="excerpt"
                                                  rows={4}
                                                >
                                                  <ClearableLabeledInput
                                                    bordered={true}
                                                    element={
                                                      <TextArea
                                                        className=""
                                                        id="excerpt"
                                                        onChange={[Function]}
                                                        placeholder="excerpt"
                                                        prefixCls="ant-input"
                                                        rows={4}
                                                      />
                                                    }
                                                    handleReset={[Function]}
                                                    id="excerpt"
                                                    inputType="text"
                                                    onChange={[Function]}
                                                    placeholder="excerpt"
                                                    prefixCls="ant-input"
                                                    rows={4}
                                                    triggerFocus={[Function]}
                                                    value=""
                                                  >
                                                    <TextArea
                                                      className=""
                                                      id="excerpt"
                                                      onChange={[Function]}
                                                      placeholder="excerpt"
                                                      prefixCls="ant-input"
                                                      rows={4}
                                                      value=""
                                                    >
                                                      <ResizableTextArea
                                                        className=""
                                                        id="excerpt"
                                                        onChange={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="excerpt"
                                                        prefixCls="ant-input"
                                                        rows={4}
                                                        value=""
                                                      >
                                                        <ResizeObserver
                                                          disabled={true}
                                                          onResize={[Function]}
                                                        >
                                                          <textarea
                                                            className="ant-input"
                                                            id="excerpt"
                                                            onChange={[Function]}
                                                            onKeyDown={[Function]}
                                                            placeholder="excerpt"
                                                            rows={4}
                                                            style={Object {}}
                                                            value=""
                                                          />
                                                        </ResizeObserver>
                                                      </ResizableTextArea>
                                                    </TextArea>
                                                  </ClearableLabeledInput>
                                                </TextArea>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            hidden={true}
                            key="true"
                            label="Claims"
                            name="claims"
                          >
                            <WrapperField
                              hidden={true}
                              label="Claims"
                              messageVariables={
                                Object {
                                  "label": "Claims",
                                }
                              }
                              name="claims"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                hidden={true}
                                key="_claims"
                                label="Claims"
                                messageVariables={
                                  Object {
                                    "label": "Claims",
                                  }
                                }
                                name={
                                  Array [
                                    "claims",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item ant-form-item-hidden"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item ant-form-item-hidden"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      hidden={true}
                                      htmlFor="claims"
                                      label="Claims"
                                      name="claims"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="claims"
                                            title="Claims"
                                          >
                                            Claims
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      hidden={true}
                                      label="Claims"
                                      name={
                                        Array [
                                          "claims",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                              >
                                                <Selector
                                                  action="Claims"
                                                  display="title"
                                                  id="claims"
                                                  mode="multiple"
                                                  onChange={[Function]}
                                                >
                                                  <Select
                                                    bordered={true}
                                                    choiceTransitionName=""
                                                    defaultValue={Array []}
                                                    filterOption={[Function]}
                                                    listHeight={128}
                                                    loading={false}
                                                    mode="multiple"
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Select claims"
                                                    transitionName="slide-up"
                                                  >
                                                    <Select
                                                      choiceTransitionName=""
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={Array []}
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Select claims"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      transitionName="slide-up"
                                                    >
                                                      <ForwardRef(Select)
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={Array []}
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        inputIcon={[Function]}
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        mode="multiple"
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        placeholder="Select claims"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                      >
                                                        <div
                                                          className="ant-select ant-select-multiple ant-select-show-search"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SelectTrigger
                                                            containerWidth={null}
                                                            dropdownClassName=""
                                                            empty={true}
                                                            getTriggerDOMNode={[Function]}
                                                            popupElement={
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={true}
                                                                flattenOptions={Array []}
                                                                height={128}
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onScroll={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={Array []}
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={Set {}}
                                                                virtual={true}
                                                              />
                                                            }
                                                            prefixCls="ant-select"
                                                            transitionName="slide-up"
                                                          >
                                                            <Trigger
                                                              action={Array []}
                                                              afterPopupVisibleChange={[Function]}
                                                              autoDestroy={false}
                                                              blurDelay={0.15}
                                                              builtinPlacements={
                                                                Object {
                                                                  "bottomLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tl",
                                                                      "bl",
                                                                    ],
                                                                  },
                                                                  "bottomRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tr",
                                                                      "br",
                                                                    ],
                                                                  },
                                                                  "topLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "bl",
                                                                      "tl",
                                                                    ],
                                                                  },
                                                                  "topRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "br",
                                                                      "tr",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              defaultPopupVisible={false}
                                                              destroyPopupOnHide={false}
                                                              focusDelay={0}
                                                              getDocument={[Function]}
                                                              getPopupClassNameFromAlign={[Function]}
                                                              getTriggerDOMNode={[Function]}
                                                              hideAction={Array []}
                                                              mask={false}
                                                              maskClosable={true}
                                                              mouseEnterDelay={0}
                                                              mouseLeaveDelay={0.1}
                                                              onPopupAlign={[Function]}
                                                              onPopupVisibleChange={[Function]}
                                                              popup={
                                                                <div>
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={Array []}
                                                                    height={128}
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onScroll={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={Array []}
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={Set {}}
                                                                    virtual={true}
                                                                  />
                                                                </div>
                                                              }
                                                              popupAlign={Object {}}
                                                              popupClassName="ant-select-dropdown-empty"
                                                              popupPlacement="bottomLeft"
                                                              popupStyle={
                                                                Object {
                                                                  "minWidth": null,
                                                                  "width": null,
                                                                }
                                                              }
                                                              popupTransitionName="slide-up"
                                                              prefixCls="ant-select-dropdown"
                                                              showAction={Array []}
                                                            >
                                                              <Selector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                choiceTransitionName=""
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={Array []}
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                        style="width: 0px;"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                        <span
                                                                          aria-hidden="true"
                                                                          class="ant-select-selection-search-mirror"
                                                                        >
                                                                          
                                                                           
                                                                        </span>
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-placeholder"
                                                                      >
                                                                        Select claims
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                key="trigger"
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                mode="multiple"
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="Select claims"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={true}
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                values={Array []}
                                                              >
                                                                <div
                                                                  className="ant-select-selector"
                                                                  onMouseDown={[Function]}
                                                                >
                                                                  <SelectSelector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    choiceTransitionName=""
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue={Array []}
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                            style="width: 0px;"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                            <span
                                                                              aria-hidden="true"
                                                                              class="ant-select-selection-search-mirror"
                                                                            >
                                                                              
                                                                               
                                                                            </span>
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-placeholder"
                                                                          >
                                                                            Select claims
                                                                          </span>
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    filterOption={[Function]}
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    inputRef={
                                                                      Object {
                                                                        "current": <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />,
                                                                      }
                                                                    }
                                                                    listHeight={128}
                                                                    listItemHeight={24}
                                                                    loading={false}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    mode="multiple"
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onInputChange={[Function]}
                                                                    onInputCompositionEnd={[Function]}
                                                                    onInputCompositionStart={[Function]}
                                                                    onInputKeyDown={[Function]}
                                                                    onInputMouseDown={[Function]}
                                                                    onInputPaste={[Function]}
                                                                    onPopupScroll={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    placeholder="Select claims"
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={true}
                                                                    tokenWithEnter={false}
                                                                    transitionName="slide-up"
                                                                    values={Array []}
                                                                  >
                                                                    <CSSMotionList
                                                                      component={false}
                                                                      keys={Array []}
                                                                      motionAppear={false}
                                                                      motionName=""
                                                                    />
                                                                    <span
                                                                      className="ant-select-selection-search"
                                                                      style={
                                                                        Object {
                                                                          "width": 0,
                                                                        }
                                                                      }
                                                                    >
                                                                      <Input
                                                                        accessibilityIndex={0}
                                                                        attrs={Object {}}
                                                                        inputElement={null}
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        prefixCls="ant-select"
                                                                        value=""
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="undefined_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="undefined_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="undefined_list"
                                                                          autoComplete="off"
                                                                          className="ant-select-selection-search-input"
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          readOnly={true}
                                                                          role="combobox"
                                                                          style={
                                                                            Object {
                                                                              "opacity": 0,
                                                                            }
                                                                          }
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </Input>
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-selection-search-mirror"
                                                                      >
                                                                         
                                                                      </span>
                                                                    </span>
                                                                    <span
                                                                      className="ant-select-selection-placeholder"
                                                                    >
                                                                      Select claims
                                                                    </span>
                                                                  </SelectSelector>
                                                                </div>
                                                              </Selector>
                                                            </Trigger>
                                                          </SelectTrigger>
                                                        </div>
                                                      </ForwardRef(Select)>
                                                    </Select>
                                                  </Select>
                                                </Selector>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            hidden={true}
                          >
                            <Row
                              className="ant-form-item ant-form-item-hidden"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item ant-form-item-hidden"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  hidden={true}
                                  prefixCls="ant-form"
                                />
                                <FormItemInput
                                  errors={Array []}
                                  hidden={true}
                                  onDomErrorVisibleChange={[Function]}
                                  prefixCls="ant-form"
                                  validateStatus=""
                                >
                                  <Col
                                    className="ant-form-item-control"
                                  >
                                    <div
                                      className="ant-col ant-form-item-control"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Button
                                            block={false}
                                            ghost={false}
                                            htmlType="button"
                                            loading={false}
                                            onClick={[Function]}
                                            type="primary"
                                          >
                                            <Wave>
                                              <button
                                                className="ant-btn ant-btn-primary"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <ForwardRef
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <CSSMotion
                                                      internalRef={null}
                                                      motionAppear={true}
                                                      motionEnter={true}
                                                      motionLeave={true}
                                                      motionName="ant-btn-loading-icon-motion"
                                                      onAppearActive={[Function]}
                                                      onAppearStart={[Function]}
                                                      onEnterActive={[Function]}
                                                      onEnterStart={[Function]}
                                                      onLeaveActive={[Function]}
                                                      onLeaveStart={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    />
                                                  </ForwardRef>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  Add Claim
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                      </div>
                                      <ForwardRef
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <CSSMotion
                                          internalRef={null}
                                          motionAppear={true}
                                          motionDeadline={500}
                                          motionEnter={true}
                                          motionLeave={true}
                                          motionName="show-help"
                                          onLeaveEnd={[Function]}
                                          removeOnLeave={true}
                                          visible={false}
                                        />
                                      </ForwardRef>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </FormItem>
                          <FormItem
                            label="Description"
                            name="description"
                          >
                            <WrapperField
                              label="Description"
                              messageVariables={
                                Object {
                                  "label": "Description",
                                }
                              }
                              name="description"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_description"
                                label="Description"
                                messageVariables={
                                  Object {
                                    "label": "Description",
                                  }
                                }
                                name={
                                  Array [
                                    "description",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="description"
                                      label="Description"
                                      name="description"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="description"
                                            title="Description"
                                          >
                                            Description
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Description"
                                      name={
                                        Array [
                                          "description",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                              >
                                                <Editor
                                                  id="description"
                                                  onChange={[Function]}
                                                >
                                                  <div />
                                                </Editor>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                        </div>
                      </Col>
                      <Col
                        span={6}
                      >
                        <div
                          className="ant-col ant-col-6"
                          style={
                            Object {
                              "paddingLeft": 8,
                              "paddingRight": 8,
                            }
                          }
                        >
                          <FormItem
                            label="Status"
                            name="status"
                          >
                            <WrapperField
                              label="Status"
                              messageVariables={
                                Object {
                                  "label": "Status",
                                }
                              }
                              name="status"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_status"
                                label="Status"
                                messageVariables={
                                  Object {
                                    "label": "Status",
                                  }
                                }
                                name={
                                  Array [
                                    "status",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="status"
                                      label="Status"
                                      name="status"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="status"
                                            title="Status"
                                          >
                                            Status
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Status"
                                      name={
                                        Array [
                                          "status",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            />
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            label="Image"
                            name="featured_medium_id"
                          >
                            <WrapperField
                              label="Image"
                              messageVariables={
                                Object {
                                  "label": "Image",
                                }
                              }
                              name="featured_medium_id"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_featured_medium_id"
                                label="Image"
                                messageVariables={
                                  Object {
                                    "label": "Image",
                                  }
                                }
                                name={
                                  Array [
                                    "featured_medium_id",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="featured_medium_id"
                                      label="Image"
                                      name="featured_medium_id"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="featured_medium_id"
                                            title="Image"
                                          >
                                            Image
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Image"
                                      name={
                                        Array [
                                          "featured_medium_id",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                              >
                                                <MediaSelector
                                                  id="featured_medium_id"
                                                  onChange={[Function]}
                                                >
                                                  <Modal
                                                    closable={false}
                                                    confirmLoading={false}
                                                    footer={
                                                      Array [
                                                        <ForwardRef(InternalButton)
                                                          block={false}
                                                          ghost={false}
                                                          htmlType="button"
                                                          loading={false}
                                                          onClick={[Function]}
                                                        >
                                                          Return
                                                        </ForwardRef(InternalButton)>,
                                                        <ForwardRef(InternalButton)
                                                          block={false}
                                                          disabled={true}
                                                          ghost={false}
                                                          htmlType="button"
                                                          loading={false}
                                                          onClick={[Function]}
                                                          type="primary"
                                                        >
                                                           Select
                                                        </ForwardRef(InternalButton)>,
                                                      ]
                                                    }
                                                    maskTransitionName="fade"
                                                    okType="primary"
                                                    onCancel={[Function]}
                                                    transitionName="zoom"
                                                    visible={false}
                                                    width="800px"
                                                  >
                                                    <Component
                                                      closable={false}
                                                      closeIcon={
                                                        <span
                                                          className="ant-modal-close-x"
                                                        >
                                                          <ForwardRef(CloseOutlined)
                                                            className="ant-modal-close-icon"
                                                          />
                                                        </span>
                                                      }
                                                      confirmLoading={false}
                                                      footer={
                                                        Array [
                                                          <ForwardRef(InternalButton)
                                                            block={false}
                                                            ghost={false}
                                                            htmlType="button"
                                                            loading={false}
                                                            onClick={[Function]}
                                                          >
                                                            Return
                                                          </ForwardRef(InternalButton)>,
                                                          <ForwardRef(InternalButton)
                                                            block={false}
                                                            disabled={true}
                                                            ghost={false}
                                                            htmlType="button"
                                                            loading={false}
                                                            onClick={[Function]}
                                                            type="primary"
                                                          >
                                                             Select
                                                          </ForwardRef(InternalButton)>,
                                                        ]
                                                      }
                                                      maskTransitionName="fade"
                                                      okType="primary"
                                                      onCancel={[Function]}
                                                      onClose={[Function]}
                                                      prefixCls="ant-modal"
                                                      transitionName="zoom"
                                                      visible={false}
                                                      width="800px"
                                                      wrapClassName=""
                                                    >
                                                      <PortalWrapper
                                                        visible={false}
                                                      />
                                                    </Component>
                                                  </Modal>
                                                  <Space
                                                    direction="vertical"
                                                  >
                                                    <div
                                                      className="ant-space ant-space-vertical"
                                                    >
                                                      <div
                                                        className="ant-space-item"
                                                        key="ant-space-item-0"
                                                        style={
                                                          Object {
                                                            "marginBottom": 8,
                                                          }
                                                        }
                                                      >
                                                        <img
                                                          width="100%"
                                                        />
                                                      </div>
                                                      <div
                                                        className="ant-space-item"
                                                        key="ant-space-item-1"
                                                        style={Object {}}
                                                      >
                                                        <Button
                                                          block={false}
                                                          ghost={false}
                                                          htmlType="button"
                                                          loading={false}
                                                          onClick={[Function]}
                                                        >
                                                          <Wave>
                                                            <button
                                                              className="ant-btn"
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <LoadingIcon
                                                                existIcon={false}
                                                                loading={false}
                                                                prefixCls="ant-btn"
                                                              >
                                                                <ForwardRef
                                                                  motionName="ant-btn-loading-icon-motion"
                                                                  onAppearActive={[Function]}
                                                                  onAppearStart={[Function]}
                                                                  onEnterActive={[Function]}
                                                                  onEnterStart={[Function]}
                                                                  onLeaveActive={[Function]}
                                                                  onLeaveStart={[Function]}
                                                                  removeOnLeave={true}
                                                                  visible={false}
                                                                >
                                                                  <CSSMotion
                                                                    internalRef={null}
                                                                    motionAppear={true}
                                                                    motionEnter={true}
                                                                    motionLeave={true}
                                                                    motionName="ant-btn-loading-icon-motion"
                                                                    onAppearActive={[Function]}
                                                                    onAppearStart={[Function]}
                                                                    onEnterActive={[Function]}
                                                                    onEnterStart={[Function]}
                                                                    onLeaveActive={[Function]}
                                                                    onLeaveStart={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  />
                                                                </ForwardRef>
                                                              </LoadingIcon>
                                                              <span
                                                                key=".0"
                                                              >
                                                                Select
                                                              </span>
                                                            </button>
                                                          </Wave>
                                                        </Button>
                                                      </div>
                                                    </div>
                                                  </Space>
                                                </MediaSelector>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            label="Slug"
                            name="slug"
                            rules={
                              Array [
                                Object {
                                  "message": "Please input the slug!",
                                  "required": true,
                                },
                                Object {
                                  "message": "Please enter valid slug!",
                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                },
                              ]
                            }
                          >
                            <WrapperField
                              label="Slug"
                              messageVariables={
                                Object {
                                  "label": "Slug",
                                }
                              }
                              name="slug"
                              onReset={[Function]}
                              rules={
                                Array [
                                  Object {
                                    "message": "Please input the slug!",
                                    "required": true,
                                  },
                                  Object {
                                    "message": "Please enter valid slug!",
                                    "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                  },
                                ]
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_slug"
                                label="Slug"
                                messageVariables={
                                  Object {
                                    "label": "Slug",
                                  }
                                }
                                name={
                                  Array [
                                    "slug",
                                  ]
                                }
                                onReset={[Function]}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the slug!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Please enter valid slug!",
                                      "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                    },
                                  ]
                                }
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="slug"
                                      label="Slug"
                                      name="slug"
                                      prefixCls="ant-form"
                                      required={true}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please input the slug!",
                                            "required": true,
                                          },
                                          Object {
                                            "message": "Please enter valid slug!",
                                            "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                          },
                                        ]
                                      }
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className="ant-form-item-required"
                                            htmlFor="slug"
                                            title="Slug"
                                          >
                                            Slug
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Slug"
                                      name={
                                        Array [
                                          "slug",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please input the slug!",
                                            "required": true,
                                          },
                                          Object {
                                            "message": "Please enter valid slug!",
                                            "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                          },
                                        ]
                                      }
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                              >
                                                <Input
                                                  id="slug"
                                                  onChange={[Function]}
                                                  type="text"
                                                >
                                                  <ClearableLabeledInput
                                                    bordered={true}
                                                    element={
                                                      <input
                                                        className="ant-input"
                                                        id="slug"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        type="text"
                                                      />
                                                    }
                                                    focused={false}
                                                    handleReset={[Function]}
                                                    id="slug"
                                                    inputType="input"
                                                    onChange={[Function]}
                                                    prefixCls="ant-input"
                                                    triggerFocus={[Function]}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="ant-input"
                                                      id="slug"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      type="text"
                                                      value=""
                                                    />
                                                  </ClearableLabeledInput>
                                                </Input>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            label="Categories"
                            name="categories"
                          >
                            <WrapperField
                              label="Categories"
                              messageVariables={
                                Object {
                                  "label": "Categories",
                                }
                              }
                              name="categories"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_categories"
                                label="Categories"
                                messageVariables={
                                  Object {
                                    "label": "Categories",
                                  }
                                }
                                name={
                                  Array [
                                    "categories",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="categories"
                                      label="Categories"
                                      name="categories"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="categories"
                                            title="Categories"
                                          >
                                            Categories
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Categories"
                                      name={
                                        Array [
                                          "categories",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                              >
                                                <Selector
                                                  action="Categories"
                                                  id="categories"
                                                  key="true"
                                                  mode="multiple"
                                                  onChange={[Function]}
                                                >
                                                  <Select
                                                    bordered={true}
                                                    choiceTransitionName=""
                                                    defaultValue={Array []}
                                                    filterOption={[Function]}
                                                    listHeight={128}
                                                    loading={false}
                                                    mode="multiple"
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Select categories"
                                                    transitionName="slide-up"
                                                  >
                                                    <Select
                                                      choiceTransitionName=""
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={Array []}
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Select categories"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      transitionName="slide-up"
                                                    >
                                                      <ForwardRef(Select)
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={Array []}
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        inputIcon={[Function]}
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        mode="multiple"
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        placeholder="Select categories"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                      >
                                                        <div
                                                          className="ant-select ant-select-multiple ant-select-show-search"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SelectTrigger
                                                            containerWidth={null}
                                                            dropdownClassName=""
                                                            empty={true}
                                                            getTriggerDOMNode={[Function]}
                                                            popupElement={
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={true}
                                                                flattenOptions={Array []}
                                                                height={128}
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onScroll={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={Array []}
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={Set {}}
                                                                virtual={true}
                                                              />
                                                            }
                                                            prefixCls="ant-select"
                                                            transitionName="slide-up"
                                                          >
                                                            <Trigger
                                                              action={Array []}
                                                              afterPopupVisibleChange={[Function]}
                                                              autoDestroy={false}
                                                              blurDelay={0.15}
                                                              builtinPlacements={
                                                                Object {
                                                                  "bottomLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tl",
                                                                      "bl",
                                                                    ],
                                                                  },
                                                                  "bottomRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tr",
                                                                      "br",
                                                                    ],
                                                                  },
                                                                  "topLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "bl",
                                                                      "tl",
                                                                    ],
                                                                  },
                                                                  "topRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "br",
                                                                      "tr",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              defaultPopupVisible={false}
                                                              destroyPopupOnHide={false}
                                                              focusDelay={0}
                                                              getDocument={[Function]}
                                                              getPopupClassNameFromAlign={[Function]}
                                                              getTriggerDOMNode={[Function]}
                                                              hideAction={Array []}
                                                              mask={false}
                                                              maskClosable={true}
                                                              mouseEnterDelay={0}
                                                              mouseLeaveDelay={0.1}
                                                              onPopupAlign={[Function]}
                                                              onPopupVisibleChange={[Function]}
                                                              popup={
                                                                <div>
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={Array []}
                                                                    height={128}
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onScroll={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={Array []}
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={Set {}}
                                                                    virtual={true}
                                                                  />
                                                                </div>
                                                              }
                                                              popupAlign={Object {}}
                                                              popupClassName="ant-select-dropdown-empty"
                                                              popupPlacement="bottomLeft"
                                                              popupStyle={
                                                                Object {
                                                                  "minWidth": null,
                                                                  "width": null,
                                                                }
                                                              }
                                                              popupTransitionName="slide-up"
                                                              prefixCls="ant-select-dropdown"
                                                              showAction={Array []}
                                                            >
                                                              <Selector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                choiceTransitionName=""
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={Array []}
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                        style="width: 0px;"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                        <span
                                                                          aria-hidden="true"
                                                                          class="ant-select-selection-search-mirror"
                                                                        >
                                                                          
                                                                           
                                                                        </span>
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-placeholder"
                                                                      >
                                                                        Select categories
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                key="trigger"
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                mode="multiple"
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="Select categories"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={true}
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                values={Array []}
                                                              >
                                                                <div
                                                                  className="ant-select-selector"
                                                                  onMouseDown={[Function]}
                                                                >
                                                                  <SelectSelector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    choiceTransitionName=""
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue={Array []}
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                            style="width: 0px;"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                            <span
                                                                              aria-hidden="true"
                                                                              class="ant-select-selection-search-mirror"
                                                                            >
                                                                              
                                                                               
                                                                            </span>
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-placeholder"
                                                                          >
                                                                            Select categories
                                                                          </span>
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    filterOption={[Function]}
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    inputRef={
                                                                      Object {
                                                                        "current": <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />,
                                                                      }
                                                                    }
                                                                    listHeight={128}
                                                                    listItemHeight={24}
                                                                    loading={false}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    mode="multiple"
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onInputChange={[Function]}
                                                                    onInputCompositionEnd={[Function]}
                                                                    onInputCompositionStart={[Function]}
                                                                    onInputKeyDown={[Function]}
                                                                    onInputMouseDown={[Function]}
                                                                    onInputPaste={[Function]}
                                                                    onPopupScroll={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    placeholder="Select categories"
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={true}
                                                                    tokenWithEnter={false}
                                                                    transitionName="slide-up"
                                                                    values={Array []}
                                                                  >
                                                                    <CSSMotionList
                                                                      component={false}
                                                                      keys={Array []}
                                                                      motionAppear={false}
                                                                      motionName=""
                                                                    />
                                                                    <span
                                                                      className="ant-select-selection-search"
                                                                      style={
                                                                        Object {
                                                                          "width": 0,
                                                                        }
                                                                      }
                                                                    >
                                                                      <Input
                                                                        accessibilityIndex={0}
                                                                        attrs={Object {}}
                                                                        inputElement={null}
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        prefixCls="ant-select"
                                                                        value=""
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="undefined_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="undefined_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="undefined_list"
                                                                          autoComplete="off"
                                                                          className="ant-select-selection-search-input"
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          readOnly={true}
                                                                          role="combobox"
                                                                          style={
                                                                            Object {
                                                                              "opacity": 0,
                                                                            }
                                                                          }
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </Input>
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-selection-search-mirror"
                                                                      >
                                                                         
                                                                      </span>
                                                                    </span>
                                                                    <span
                                                                      className="ant-select-selection-placeholder"
                                                                    >
                                                                      Select categories
                                                                    </span>
                                                                  </SelectSelector>
                                                                </div>
                                                              </Selector>
                                                            </Trigger>
                                                          </SelectTrigger>
                                                        </div>
                                                      </ForwardRef(Select)>
                                                    </Select>
                                                  </Select>
                                                </Selector>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem>
                            <Row
                              className="ant-form-item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  prefixCls="ant-form"
                                />
                                <FormItemInput
                                  errors={Array []}
                                  onDomErrorVisibleChange={[Function]}
                                  prefixCls="ant-form"
                                  validateStatus=""
                                >
                                  <Col
                                    className="ant-form-item-control"
                                  >
                                    <div
                                      className="ant-col ant-form-item-control"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Row
                                            gutter={8}
                                          >
                                            <div
                                              className="ant-row"
                                              style={
                                                Object {
                                                  "marginLeft": -4,
                                                  "marginRight": -4,
                                                }
                                              }
                                            >
                                              <Col
                                                span={18}
                                              >
                                                <div
                                                  className="ant-col ant-col-18"
                                                  style={
                                                    Object {
                                                      "paddingLeft": 4,
                                                      "paddingRight": 4,
                                                    }
                                                  }
                                                >
                                                  <Input
                                                    onChange={[Function]}
                                                    placeholder="category name"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <ClearableLabeledInput
                                                      bordered={true}
                                                      element={
                                                        <input
                                                          className="ant-input"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          placeholder="category name"
                                                          type="text"
                                                          value=""
                                                        />
                                                      }
                                                      focused={false}
                                                      handleReset={[Function]}
                                                      inputType="input"
                                                      onChange={[Function]}
                                                      placeholder="category name"
                                                      prefixCls="ant-input"
                                                      triggerFocus={[Function]}
                                                      type="text"
                                                      value=""
                                                    >
                                                      <input
                                                        className="ant-input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="category name"
                                                        type="text"
                                                        value=""
                                                      />
                                                    </ClearableLabeledInput>
                                                  </Input>
                                                </div>
                                              </Col>
                                              <Col
                                                span={6}
                                              >
                                                <div
                                                  className="ant-col ant-col-6"
                                                  style={
                                                    Object {
                                                      "paddingLeft": 4,
                                                      "paddingRight": 4,
                                                    }
                                                  }
                                                >
                                                  <Button
                                                    block={true}
                                                    ghost={false}
                                                    htmlType="button"
                                                    loading={false}
                                                    onClick={[Function]}
                                                  >
                                                    <Wave>
                                                      <button
                                                        className="ant-btn ant-btn-block"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <LoadingIcon
                                                          existIcon={false}
                                                          loading={false}
                                                          prefixCls="ant-btn"
                                                        >
                                                          <ForwardRef
                                                            motionName="ant-btn-loading-icon-motion"
                                                            onAppearActive={[Function]}
                                                            onAppearStart={[Function]}
                                                            onEnterActive={[Function]}
                                                            onEnterStart={[Function]}
                                                            onLeaveActive={[Function]}
                                                            onLeaveStart={[Function]}
                                                            removeOnLeave={true}
                                                            visible={false}
                                                          >
                                                            <CSSMotion
                                                              internalRef={null}
                                                              motionAppear={true}
                                                              motionEnter={true}
                                                              motionLeave={true}
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            />
                                                          </ForwardRef>
                                                        </LoadingIcon>
                                                        <span
                                                          key=".0"
                                                        >
                                                          Add
                                                        </span>
                                                      </button>
                                                    </Wave>
                                                  </Button>
                                                </div>
                                              </Col>
                                            </div>
                                          </Row>
                                        </div>
                                      </div>
                                      <ForwardRef
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <CSSMotion
                                          internalRef={null}
                                          motionAppear={true}
                                          motionDeadline={500}
                                          motionEnter={true}
                                          motionLeave={true}
                                          motionName="show-help"
                                          onLeaveEnd={[Function]}
                                          removeOnLeave={true}
                                          visible={false}
                                        />
                                      </ForwardRef>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </FormItem>
                          <FormItem
                            key="true"
                            label="Tags"
                            name="tags"
                          >
                            <WrapperField
                              label="Tags"
                              messageVariables={
                                Object {
                                  "label": "Tags",
                                }
                              }
                              name="tags"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_tags"
                                label="Tags"
                                messageVariables={
                                  Object {
                                    "label": "Tags",
                                  }
                                }
                                name={
                                  Array [
                                    "tags",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="tags"
                                      label="Tags"
                                      name="tags"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="tags"
                                            title="Tags"
                                          >
                                            Tags
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Tags"
                                      name={
                                        Array [
                                          "tags",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                              >
                                                <Selector
                                                  action="Tags"
                                                  id="tags"
                                                  mode="multiple"
                                                  onChange={[Function]}
                                                >
                                                  <Select
                                                    bordered={true}
                                                    choiceTransitionName=""
                                                    defaultValue={Array []}
                                                    filterOption={[Function]}
                                                    listHeight={128}
                                                    loading={false}
                                                    mode="multiple"
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Select tags"
                                                    transitionName="slide-up"
                                                  >
                                                    <Select
                                                      choiceTransitionName=""
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={Array []}
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Select tags"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      transitionName="slide-up"
                                                    >
                                                      <ForwardRef(Select)
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={Array []}
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        inputIcon={[Function]}
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        mode="multiple"
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        placeholder="Select tags"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                      >
                                                        <div
                                                          className="ant-select ant-select-multiple ant-select-show-search"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SelectTrigger
                                                            containerWidth={null}
                                                            dropdownClassName=""
                                                            empty={true}
                                                            getTriggerDOMNode={[Function]}
                                                            popupElement={
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={true}
                                                                flattenOptions={Array []}
                                                                height={128}
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onScroll={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={Array []}
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={Set {}}
                                                                virtual={true}
                                                              />
                                                            }
                                                            prefixCls="ant-select"
                                                            transitionName="slide-up"
                                                          >
                                                            <Trigger
                                                              action={Array []}
                                                              afterPopupVisibleChange={[Function]}
                                                              autoDestroy={false}
                                                              blurDelay={0.15}
                                                              builtinPlacements={
                                                                Object {
                                                                  "bottomLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tl",
                                                                      "bl",
                                                                    ],
                                                                  },
                                                                  "bottomRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tr",
                                                                      "br",
                                                                    ],
                                                                  },
                                                                  "topLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "bl",
                                                                      "tl",
                                                                    ],
                                                                  },
                                                                  "topRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "br",
                                                                      "tr",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              defaultPopupVisible={false}
                                                              destroyPopupOnHide={false}
                                                              focusDelay={0}
                                                              getDocument={[Function]}
                                                              getPopupClassNameFromAlign={[Function]}
                                                              getTriggerDOMNode={[Function]}
                                                              hideAction={Array []}
                                                              mask={false}
                                                              maskClosable={true}
                                                              mouseEnterDelay={0}
                                                              mouseLeaveDelay={0.1}
                                                              onPopupAlign={[Function]}
                                                              onPopupVisibleChange={[Function]}
                                                              popup={
                                                                <div>
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={Array []}
                                                                    height={128}
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onScroll={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={Array []}
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={Set {}}
                                                                    virtual={true}
                                                                  />
                                                                </div>
                                                              }
                                                              popupAlign={Object {}}
                                                              popupClassName="ant-select-dropdown-empty"
                                                              popupPlacement="bottomLeft"
                                                              popupStyle={
                                                                Object {
                                                                  "minWidth": null,
                                                                  "width": null,
                                                                }
                                                              }
                                                              popupTransitionName="slide-up"
                                                              prefixCls="ant-select-dropdown"
                                                              showAction={Array []}
                                                            >
                                                              <Selector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                choiceTransitionName=""
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={Array []}
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                        style="width: 0px;"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                        <span
                                                                          aria-hidden="true"
                                                                          class="ant-select-selection-search-mirror"
                                                                        >
                                                                          
                                                                           
                                                                        </span>
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-placeholder"
                                                                      >
                                                                        Select tags
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                key="trigger"
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                mode="multiple"
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="Select tags"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={true}
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                values={Array []}
                                                              >
                                                                <div
                                                                  className="ant-select-selector"
                                                                  onMouseDown={[Function]}
                                                                >
                                                                  <SelectSelector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    choiceTransitionName=""
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue={Array []}
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                            style="width: 0px;"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                            <span
                                                                              aria-hidden="true"
                                                                              class="ant-select-selection-search-mirror"
                                                                            >
                                                                              
                                                                               
                                                                            </span>
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-placeholder"
                                                                          >
                                                                            Select tags
                                                                          </span>
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    filterOption={[Function]}
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    inputRef={
                                                                      Object {
                                                                        "current": <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />,
                                                                      }
                                                                    }
                                                                    listHeight={128}
                                                                    listItemHeight={24}
                                                                    loading={false}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    mode="multiple"
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onInputChange={[Function]}
                                                                    onInputCompositionEnd={[Function]}
                                                                    onInputCompositionStart={[Function]}
                                                                    onInputKeyDown={[Function]}
                                                                    onInputMouseDown={[Function]}
                                                                    onInputPaste={[Function]}
                                                                    onPopupScroll={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    placeholder="Select tags"
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={true}
                                                                    tokenWithEnter={false}
                                                                    transitionName="slide-up"
                                                                    values={Array []}
                                                                  >
                                                                    <CSSMotionList
                                                                      component={false}
                                                                      keys={Array []}
                                                                      motionAppear={false}
                                                                      motionName=""
                                                                    />
                                                                    <span
                                                                      className="ant-select-selection-search"
                                                                      style={
                                                                        Object {
                                                                          "width": 0,
                                                                        }
                                                                      }
                                                                    >
                                                                      <Input
                                                                        accessibilityIndex={0}
                                                                        attrs={Object {}}
                                                                        inputElement={null}
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        prefixCls="ant-select"
                                                                        value=""
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="undefined_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="undefined_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="undefined_list"
                                                                          autoComplete="off"
                                                                          className="ant-select-selection-search-input"
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          readOnly={true}
                                                                          role="combobox"
                                                                          style={
                                                                            Object {
                                                                              "opacity": 0,
                                                                            }
                                                                          }
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </Input>
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-selection-search-mirror"
                                                                      >
                                                                         
                                                                      </span>
                                                                    </span>
                                                                    <span
                                                                      className="ant-select-selection-placeholder"
                                                                    >
                                                                      Select tags
                                                                    </span>
                                                                  </SelectSelector>
                                                                </div>
                                                              </Selector>
                                                            </Trigger>
                                                          </SelectTrigger>
                                                        </div>
                                                      </ForwardRef(Select)>
                                                    </Select>
                                                  </Select>
                                                </Selector>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem>
                            <Row
                              className="ant-form-item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  prefixCls="ant-form"
                                />
                                <FormItemInput
                                  errors={Array []}
                                  onDomErrorVisibleChange={[Function]}
                                  prefixCls="ant-form"
                                  validateStatus=""
                                >
                                  <Col
                                    className="ant-form-item-control"
                                  >
                                    <div
                                      className="ant-col ant-form-item-control"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Row
                                            gutter={8}
                                          >
                                            <div
                                              className="ant-row"
                                              style={
                                                Object {
                                                  "marginLeft": -4,
                                                  "marginRight": -4,
                                                }
                                              }
                                            >
                                              <Col
                                                span={18}
                                              >
                                                <div
                                                  className="ant-col ant-col-18"
                                                  style={
                                                    Object {
                                                      "paddingLeft": 4,
                                                      "paddingRight": 4,
                                                    }
                                                  }
                                                >
                                                  <Input
                                                    onChange={[Function]}
                                                    placeholder="tag name"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <ClearableLabeledInput
                                                      bordered={true}
                                                      element={
                                                        <input
                                                          className="ant-input"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          placeholder="tag name"
                                                          type="text"
                                                          value=""
                                                        />
                                                      }
                                                      focused={false}
                                                      handleReset={[Function]}
                                                      inputType="input"
                                                      onChange={[Function]}
                                                      placeholder="tag name"
                                                      prefixCls="ant-input"
                                                      triggerFocus={[Function]}
                                                      type="text"
                                                      value=""
                                                    >
                                                      <input
                                                        className="ant-input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="tag name"
                                                        type="text"
                                                        value=""
                                                      />
                                                    </ClearableLabeledInput>
                                                  </Input>
                                                </div>
                                              </Col>
                                              <Col
                                                span={6}
                                              >
                                                <div
                                                  className="ant-col ant-col-6"
                                                  style={
                                                    Object {
                                                      "paddingLeft": 4,
                                                      "paddingRight": 4,
                                                    }
                                                  }
                                                >
                                                  <Button
                                                    block={true}
                                                    ghost={false}
                                                    htmlType="button"
                                                    loading={false}
                                                    onClick={[Function]}
                                                  >
                                                    <Wave>
                                                      <button
                                                        className="ant-btn ant-btn-block"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <LoadingIcon
                                                          existIcon={false}
                                                          loading={false}
                                                          prefixCls="ant-btn"
                                                        >
                                                          <ForwardRef
                                                            motionName="ant-btn-loading-icon-motion"
                                                            onAppearActive={[Function]}
                                                            onAppearStart={[Function]}
                                                            onEnterActive={[Function]}
                                                            onEnterStart={[Function]}
                                                            onLeaveActive={[Function]}
                                                            onLeaveStart={[Function]}
                                                            removeOnLeave={true}
                                                            visible={false}
                                                          >
                                                            <CSSMotion
                                                              internalRef={null}
                                                              motionAppear={true}
                                                              motionEnter={true}
                                                              motionLeave={true}
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            />
                                                          </ForwardRef>
                                                        </LoadingIcon>
                                                        <span
                                                          key=".0"
                                                        >
                                                          Add
                                                        </span>
                                                      </button>
                                                    </Wave>
                                                  </Button>
                                                </div>
                                              </Col>
                                            </div>
                                          </Row>
                                        </div>
                                      </div>
                                      <ForwardRef
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <CSSMotion
                                          internalRef={null}
                                          motionAppear={true}
                                          motionDeadline={500}
                                          motionEnter={true}
                                          motionLeave={true}
                                          motionName="show-help"
                                          onLeaveEnd={[Function]}
                                          removeOnLeave={true}
                                          visible={false}
                                        />
                                      </ForwardRef>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </FormItem>
                          <FormItem
                            label="Formats"
                            name="format"
                            rules={
                              Array [
                                Object {
                                  "message": "Please add format!",
                                  "required": true,
                                },
                              ]
                            }
                          >
                            <WrapperField
                              label="Formats"
                              messageVariables={
                                Object {
                                  "label": "Formats",
                                }
                              }
                              name="format"
                              onReset={[Function]}
                              rules={
                                Array [
                                  Object {
                                    "message": "Please add format!",
                                    "required": true,
                                  },
                                ]
                              }
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_format"
                                label="Formats"
                                messageVariables={
                                  Object {
                                    "label": "Formats",
                                  }
                                }
                                name={
                                  Array [
                                    "format",
                                  ]
                                }
                                onReset={[Function]}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please add format!",
                                      "required": true,
                                    },
                                  ]
                                }
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="format"
                                      label="Formats"
                                      name="format"
                                      prefixCls="ant-form"
                                      required={true}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please add format!",
                                            "required": true,
                                          },
                                        ]
                                      }
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className="ant-form-item-required"
                                            htmlFor="format"
                                            title="Formats"
                                          >
                                            Formats
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Formats"
                                      name={
                                        Array [
                                          "format",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please add format!",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                              >
                                                <Selector
                                                  action="Formats"
                                                  id="format"
                                                  onChange={[Function]}
                                                >
                                                  <Select
                                                    bordered={true}
                                                    choiceTransitionName=""
                                                    defaultValue={
                                                      Array [
                                                        Array [],
                                                      ]
                                                    }
                                                    filterOption={[Function]}
                                                    listHeight={128}
                                                    loading={false}
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Select formats"
                                                    transitionName="slide-up"
                                                  >
                                                    <Select
                                                      choiceTransitionName=""
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={
                                                        Array [
                                                          Array [],
                                                        ]
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={null}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Select formats"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      transitionName="slide-up"
                                                    >
                                                      <ForwardRef(Select)
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={
                                                          Array [
                                                            Array [],
                                                          ]
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        inputIcon={[Function]}
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={null}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        placeholder="Select formats"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                      >
                                                        <div
                                                          className="ant-select ant-select-single ant-select-show-arrow"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SelectTrigger
                                                            containerWidth={null}
                                                            dropdownClassName=""
                                                            empty={true}
                                                            getTriggerDOMNode={[Function]}
                                                            popupElement={
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={true}
                                                                flattenOptions={Array []}
                                                                height={128}
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={null}
                                                                multiple={false}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onScroll={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={Array []}
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={
                                                                  Set {
                                                                    Array [],
                                                                  }
                                                                }
                                                                virtual={true}
                                                              />
                                                            }
                                                            prefixCls="ant-select"
                                                            transitionName="slide-up"
                                                          >
                                                            <Trigger
                                                              action={Array []}
                                                              afterPopupVisibleChange={[Function]}
                                                              autoDestroy={false}
                                                              blurDelay={0.15}
                                                              builtinPlacements={
                                                                Object {
                                                                  "bottomLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tl",
                                                                      "bl",
                                                                    ],
                                                                  },
                                                                  "bottomRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tr",
                                                                      "br",
                                                                    ],
                                                                  },
                                                                  "topLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "bl",
                                                                      "tl",
                                                                    ],
                                                                  },
                                                                  "topRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "br",
                                                                      "tr",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              defaultPopupVisible={false}
                                                              destroyPopupOnHide={false}
                                                              focusDelay={0}
                                                              getDocument={[Function]}
                                                              getPopupClassNameFromAlign={[Function]}
                                                              getTriggerDOMNode={[Function]}
                                                              hideAction={Array []}
                                                              mask={false}
                                                              maskClosable={true}
                                                              mouseEnterDelay={0}
                                                              mouseLeaveDelay={0.1}
                                                              onPopupAlign={[Function]}
                                                              onPopupVisibleChange={[Function]}
                                                              popup={
                                                                <div>
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={Array []}
                                                                    height={128}
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={null}
                                                                    multiple={false}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onScroll={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={Array []}
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={
                                                                      Set {
                                                                        Array [],
                                                                      }
                                                                    }
                                                                    virtual={true}
                                                                  />
                                                                </div>
                                                              }
                                                              popupAlign={Object {}}
                                                              popupClassName="ant-select-dropdown-empty"
                                                              popupPlacement="bottomLeft"
                                                              popupStyle={
                                                                Object {
                                                                  "minWidth": null,
                                                                  "width": null,
                                                                }
                                                              }
                                                              popupTransitionName="slide-up"
                                                              prefixCls="ant-select-dropdown"
                                                              showAction={Array []}
                                                            >
                                                              <Selector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                choiceTransitionName=""
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={
                                                                  Array [
                                                                    Array [],
                                                                  ]
                                                                }
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-item"
                                                                      />
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                key="trigger"
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={null}
                                                                multiple={false}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="Select formats"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={false}
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                values={
                                                                  Array [
                                                                    Object {
                                                                      "disabled": undefined,
                                                                      "key": Array [],
                                                                      "label": Array [],
                                                                      "value": Array [],
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <div
                                                                  className="ant-select-selector"
                                                                  onMouseDown={[Function]}
                                                                >
                                                                  <SingleSelector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    choiceTransitionName=""
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue={
                                                                      Array [
                                                                        Array [],
                                                                      ]
                                                                    }
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-item"
                                                                          />
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    filterOption={[Function]}
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    inputRef={
                                                                      Object {
                                                                        "current": <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />,
                                                                      }
                                                                    }
                                                                    listHeight={128}
                                                                    listItemHeight={24}
                                                                    loading={false}
                                                                    menuItemSelectedIcon={null}
                                                                    multiple={false}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onInputChange={[Function]}
                                                                    onInputCompositionEnd={[Function]}
                                                                    onInputCompositionStart={[Function]}
                                                                    onInputKeyDown={[Function]}
                                                                    onInputMouseDown={[Function]}
                                                                    onInputPaste={[Function]}
                                                                    onPopupScroll={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    placeholder="Select formats"
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={false}
                                                                    tokenWithEnter={false}
                                                                    transitionName="slide-up"
                                                                    values={
                                                                      Array [
                                                                        Object {
                                                                          "disabled": undefined,
                                                                          "key": Array [],
                                                                          "label": Array [],
                                                                          "value": Array [],
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="ant-select-selection-search"
                                                                    >
                                                                      <Input
                                                                        accessibilityIndex={0}
                                                                        attrs={Object {}}
                                                                        editable={false}
                                                                        inputElement={null}
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        prefixCls="ant-select"
                                                                        value=""
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="undefined_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="undefined_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="undefined_list"
                                                                          autoComplete="off"
                                                                          className="ant-select-selection-search-input"
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          readOnly={true}
                                                                          role="combobox"
                                                                          style={
                                                                            Object {
                                                                              "opacity": 0,
                                                                            }
                                                                          }
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </Input>
                                                                    </span>
                                                                    <span
                                                                      className="ant-select-selection-item"
                                                                    />
                                                                  </SingleSelector>
                                                                </div>
                                                              </Selector>
                                                            </Trigger>
                                                          </SelectTrigger>
                                                          <TransBtn
                                                            className="ant-select-arrow"
                                                            customizeIcon={[Function]}
                                                            customizeIconProps={
                                                              Object {
                                                                "focused": false,
                                                                "loading": false,
                                                                "open": undefined,
                                                                "searchValue": "",
                                                                "showSearch": false,
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              aria-hidden={true}
                                                              className="ant-select-arrow"
                                                              onMouseDown={[Function]}
                                                              style={
                                                                Object {
                                                                  "WebkitUserSelect": "none",
                                                                  "userSelect": "none",
                                                                }
                                                              }
                                                              unselectable="on"
                                                            >
                                                              <ForwardRef(DownOutlined)
                                                                className="ant-select-suffix"
                                                              >
                                                                <AntdIcon
                                                                  className="ant-select-suffix"
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "down",
                                                                      "theme": "outlined",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-label="down"
                                                                    className="anticon anticon-down ant-select-suffix"
                                                                    role="img"
                                                                  >
                                                                    <IconReact
                                                                      className=""
                                                                      icon={
                                                                        Object {
                                                                          "icon": Object {
                                                                            "attrs": Object {
                                                                              "focusable": "false",
                                                                              "viewBox": "64 64 896 896",
                                                                            },
                                                                            "children": Array [
                                                                              Object {
                                                                                "attrs": Object {
                                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                },
                                                                                "tag": "path",
                                                                              },
                                                                            ],
                                                                            "tag": "svg",
                                                                          },
                                                                          "name": "down",
                                                                          "theme": "outlined",
                                                                        }
                                                                      }
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        className=""
                                                                        data-icon="down"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height="1em"
                                                                        key="svg-down"
                                                                        viewBox="64 64 896 896"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                          key="svg-down-svg-0"
                                                                        />
                                                                      </svg>
                                                                    </IconReact>
                                                                  </span>
                                                                </AntdIcon>
                                                              </ForwardRef(DownOutlined)>
                                                            </span>
                                                          </TransBtn>
                                                        </div>
                                                      </ForwardRef(Select)>
                                                    </Select>
                                                  </Select>
                                                </Selector>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                          <FormItem
                            label="Authors"
                            name="authors"
                          >
                            <WrapperField
                              label="Authors"
                              messageVariables={
                                Object {
                                  "label": "Authors",
                                }
                              }
                              name="authors"
                              onReset={[Function]}
                              trigger="onChange"
                              validateTrigger="onChange"
                            >
                              <Field
                                key="_authors"
                                label="Authors"
                                messageVariables={
                                  Object {
                                    "label": "Authors",
                                  }
                                }
                                name={
                                  Array [
                                    "authors",
                                  ]
                                }
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="value"
                              >
                                <Row
                                  className="ant-form-item"
                                  key="row"
                                >
                                  <div
                                    className="ant-row ant-form-item"
                                    style={Object {}}
                                  >
                                    <FormItemLabel
                                      htmlFor="authors"
                                      label="Authors"
                                      name="authors"
                                      prefixCls="ant-form"
                                      required={false}
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          style={Object {}}
                                        >
                                          <label
                                            className=""
                                            htmlFor="authors"
                                            title="Authors"
                                          >
                                            Authors
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      errors={Array []}
                                      label="Authors"
                                      name={
                                        Array [
                                          "authors",
                                        ]
                                      }
                                      onDomErrorVisibleChange={[Function]}
                                      prefixCls="ant-form"
                                      touched={false}
                                      validateStatus=""
                                      validating={false}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <Component
                                                update={1}
                                              >
                                                <Selector
                                                  action="Authors"
                                                  display="email"
                                                  id="authors"
                                                  mode="multiple"
                                                  onChange={[Function]}
                                                >
                                                  <Select
                                                    bordered={true}
                                                    choiceTransitionName=""
                                                    defaultValue={Array []}
                                                    filterOption={[Function]}
                                                    listHeight={128}
                                                    loading={false}
                                                    mode="multiple"
                                                    onChange={[Function]}
                                                    onPopupScroll={[Function]}
                                                    onSearch={[Function]}
                                                    placeholder="Select authors"
                                                    transitionName="slide-up"
                                                  >
                                                    <Select
                                                      choiceTransitionName=""
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={Array []}
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      inputIcon={[Function]}
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      placeholder="Select authors"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      transitionName="slide-up"
                                                    >
                                                      <ForwardRef(Select)
                                                        choiceTransitionName=""
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={Array []}
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        inputIcon={[Function]}
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                        mode="multiple"
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        placeholder="Select authors"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        transitionName="slide-up"
                                                      >
                                                        <div
                                                          className="ant-select ant-select-multiple ant-select-show-search"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SelectTrigger
                                                            containerWidth={null}
                                                            dropdownClassName=""
                                                            empty={true}
                                                            getTriggerDOMNode={[Function]}
                                                            popupElement={
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={true}
                                                                flattenOptions={Array []}
                                                                height={128}
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onScroll={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={Array []}
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={Set {}}
                                                                virtual={true}
                                                              />
                                                            }
                                                            prefixCls="ant-select"
                                                            transitionName="slide-up"
                                                          >
                                                            <Trigger
                                                              action={Array []}
                                                              afterPopupVisibleChange={[Function]}
                                                              autoDestroy={false}
                                                              blurDelay={0.15}
                                                              builtinPlacements={
                                                                Object {
                                                                  "bottomLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tl",
                                                                      "bl",
                                                                    ],
                                                                  },
                                                                  "bottomRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "tr",
                                                                      "br",
                                                                    ],
                                                                  },
                                                                  "topLeft": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "bl",
                                                                      "tl",
                                                                    ],
                                                                  },
                                                                  "topRight": Object {
                                                                    "offset": Array [
                                                                      0,
                                                                      -4,
                                                                    ],
                                                                    "overflow": Object {
                                                                      "adjustX": 0,
                                                                      "adjustY": 1,
                                                                    },
                                                                    "points": Array [
                                                                      "br",
                                                                      "tr",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              defaultPopupVisible={false}
                                                              destroyPopupOnHide={false}
                                                              focusDelay={0}
                                                              getDocument={[Function]}
                                                              getPopupClassNameFromAlign={[Function]}
                                                              getTriggerDOMNode={[Function]}
                                                              hideAction={Array []}
                                                              mask={false}
                                                              maskClosable={true}
                                                              mouseEnterDelay={0}
                                                              mouseLeaveDelay={0.1}
                                                              onPopupAlign={[Function]}
                                                              onPopupVisibleChange={[Function]}
                                                              popup={
                                                                <div>
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={Array []}
                                                                    height={128}
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onScroll={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={Array []}
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={Set {}}
                                                                    virtual={true}
                                                                  />
                                                                </div>
                                                              }
                                                              popupAlign={Object {}}
                                                              popupClassName="ant-select-dropdown-empty"
                                                              popupPlacement="bottomLeft"
                                                              popupStyle={
                                                                Object {
                                                                  "minWidth": null,
                                                                  "width": null,
                                                                }
                                                              }
                                                              popupTransitionName="slide-up"
                                                              prefixCls="ant-select-dropdown"
                                                              showAction={Array []}
                                                            >
                                                              <Selector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                choiceTransitionName=""
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={Array []}
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                        style="width: 0px;"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                        <span
                                                                          aria-hidden="true"
                                                                          class="ant-select-selection-search-mirror"
                                                                        >
                                                                          
                                                                           
                                                                        </span>
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-placeholder"
                                                                      >
                                                                        Select authors
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                key="trigger"
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                mode="multiple"
                                                                multiple={true}
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="Select authors"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={true}
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                values={Array []}
                                                              >
                                                                <div
                                                                  className="ant-select-selector"
                                                                  onMouseDown={[Function]}
                                                                >
                                                                  <SelectSelector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    choiceTransitionName=""
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue={Array []}
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                            style="width: 0px;"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="rc_select_TEST_OR_SSR_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="rc_select_TEST_OR_SSR_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                            <span
                                                                              aria-hidden="true"
                                                                              class="ant-select-selection-search-mirror"
                                                                            >
                                                                              
                                                                               
                                                                            </span>
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-placeholder"
                                                                          >
                                                                            Select authors
                                                                          </span>
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    filterOption={[Function]}
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    inputRef={
                                                                      Object {
                                                                        "current": <input
                                                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />,
                                                                      }
                                                                    }
                                                                    listHeight={128}
                                                                    listItemHeight={24}
                                                                    loading={false}
                                                                    menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                                    mode="multiple"
                                                                    multiple={true}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onInputChange={[Function]}
                                                                    onInputCompositionEnd={[Function]}
                                                                    onInputCompositionStart={[Function]}
                                                                    onInputKeyDown={[Function]}
                                                                    onInputMouseDown={[Function]}
                                                                    onInputPaste={[Function]}
                                                                    onPopupScroll={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    placeholder="Select authors"
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={true}
                                                                    tokenWithEnter={false}
                                                                    transitionName="slide-up"
                                                                    values={Array []}
                                                                  >
                                                                    <CSSMotionList
                                                                      component={false}
                                                                      keys={Array []}
                                                                      motionAppear={false}
                                                                      motionName=""
                                                                    />
                                                                    <span
                                                                      className="ant-select-selection-search"
                                                                      style={
                                                                        Object {
                                                                          "width": 0,
                                                                        }
                                                                      }
                                                                    >
                                                                      <Input
                                                                        accessibilityIndex={0}
                                                                        attrs={Object {}}
                                                                        inputElement={null}
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        prefixCls="ant-select"
                                                                        value=""
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="undefined_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="undefined_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="undefined_list"
                                                                          autoComplete="off"
                                                                          className="ant-select-selection-search-input"
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          readOnly={true}
                                                                          role="combobox"
                                                                          style={
                                                                            Object {
                                                                              "opacity": 0,
                                                                            }
                                                                          }
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </Input>
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-selection-search-mirror"
                                                                      >
                                                                         
                                                                      </span>
                                                                    </span>
                                                                    <span
                                                                      className="ant-select-selection-placeholder"
                                                                    >
                                                                      Select authors
                                                                    </span>
                                                                  </SelectSelector>
                                                                </div>
                                                              </Selector>
                                                            </Trigger>
                                                          </SelectTrigger>
                                                        </div>
                                                      </ForwardRef(Select)>
                                                    </Select>
                                                  </Select>
                                                </Selector>
                                              </Component>
                                            </div>
                                          </div>
                                          <ForwardRef
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <CSSMotion
                                              internalRef={null}
                                              motionAppear={true}
                                              motionDeadline={500}
                                              motionEnter={true}
                                              motionLeave={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            />
                                          </ForwardRef>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </Field>
                            </WrapperField>
                          </FormItem>
                        </div>
                      </Col>
                    </div>
                  </Row>
                </div>
              </div>
            </Space>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PostForm>
</Provider>
`;
