// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Media List component snapshot testing should match component with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MediaSelector
    value={1}
  >
    <Modal
      closable={false}
      confirmLoading={false}
      footer={
        Array [
          <ForwardRef(InternalButton)
            block={false}
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[Function]}
          >
            Return
          </ForwardRef(InternalButton)>,
          <ForwardRef(InternalButton)
            block={false}
            disabled={true}
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[Function]}
            type="primary"
          >
             Select
          </ForwardRef(InternalButton)>,
        ]
      }
      maskTransitionName="fade"
      okType="primary"
      onCancel={[Function]}
      transitionName="zoom"
      visible={false}
      width="800px"
    >
      <Component
        closable={false}
        closeIcon={
          <span
            className="ant-modal-close-x"
          >
            <ForwardRef(CloseOutlined)
              className="ant-modal-close-icon"
            />
          </span>
        }
        confirmLoading={false}
        footer={
          Array [
            <ForwardRef(InternalButton)
              block={false}
              ghost={false}
              htmlType="button"
              loading={false}
              onClick={[Function]}
            >
              Return
            </ForwardRef(InternalButton)>,
            <ForwardRef(InternalButton)
              block={false}
              disabled={true}
              ghost={false}
              htmlType="button"
              loading={false}
              onClick={[Function]}
              type="primary"
            >
               Select
            </ForwardRef(InternalButton)>,
          ]
        }
        maskTransitionName="fade"
        okType="primary"
        onCancel={[Function]}
        onClose={[Function]}
        prefixCls="ant-modal"
        transitionName="zoom"
        visible={false}
        width="800px"
        wrapClassName=""
      >
        <PortalWrapper
          visible={false}
        />
      </Component>
    </Modal>
    <Space
      direction="vertical"
    >
      <div
        className="ant-space ant-space-vertical"
      >
        <div
          className="ant-space-item"
          key="ant-space-item-0"
          style={
            Object {
              "marginBottom": 8,
            }
          }
        >
          <img
            src="some-url"
            width="100%"
          />
        </div>
        <div
          className="ant-space-item"
          key="ant-space-item-1"
          style={Object {}}
        >
          <Button
            block={false}
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[Function]}
          >
            <Wave>
              <button
                className="ant-btn"
                onClick={[Function]}
                type="button"
              >
                <LoadingIcon
                  existIcon={false}
                  loading={false}
                  prefixCls="ant-btn"
                >
                  <ForwardRef
                    motionName="ant-btn-loading-icon-motion"
                    onAppearActive={[Function]}
                    onAppearStart={[Function]}
                    onEnterActive={[Function]}
                    onEnterStart={[Function]}
                    onLeaveActive={[Function]}
                    onLeaveStart={[Function]}
                    removeOnLeave={true}
                    visible={false}
                  >
                    <CSSMotion
                      internalRef={null}
                      motionAppear={true}
                      motionEnter={true}
                      motionLeave={true}
                      motionName="ant-btn-loading-icon-motion"
                      onAppearActive={[Function]}
                      onAppearStart={[Function]}
                      onEnterActive={[Function]}
                      onEnterStart={[Function]}
                      onLeaveActive={[Function]}
                      onLeaveStart={[Function]}
                      removeOnLeave={true}
                      visible={false}
                    />
                  </ForwardRef>
                </LoadingIcon>
                <span
                  key=".0"
                >
                  Select
                </span>
              </button>
            </Wave>
          </Button>
        </div>
      </div>
    </Space>
  </MediaSelector>
</Provider>
`;

exports[`Media List component snapshot testing should render the component with empty data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MediaSelector
    value={null}
  >
    <Modal
      closable={false}
      confirmLoading={false}
      footer={
        Array [
          <ForwardRef(InternalButton)
            block={false}
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[Function]}
          >
            Return
          </ForwardRef(InternalButton)>,
          <ForwardRef(InternalButton)
            block={false}
            disabled={true}
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[Function]}
            type="primary"
          >
             Select
          </ForwardRef(InternalButton)>,
        ]
      }
      maskTransitionName="fade"
      okType="primary"
      onCancel={[Function]}
      transitionName="zoom"
      visible={false}
      width="800px"
    >
      <Component
        closable={false}
        closeIcon={
          <span
            className="ant-modal-close-x"
          >
            <ForwardRef(CloseOutlined)
              className="ant-modal-close-icon"
            />
          </span>
        }
        confirmLoading={false}
        footer={
          Array [
            <ForwardRef(InternalButton)
              block={false}
              ghost={false}
              htmlType="button"
              loading={false}
              onClick={[Function]}
            >
              Return
            </ForwardRef(InternalButton)>,
            <ForwardRef(InternalButton)
              block={false}
              disabled={true}
              ghost={false}
              htmlType="button"
              loading={false}
              onClick={[Function]}
              type="primary"
            >
               Select
            </ForwardRef(InternalButton)>,
          ]
        }
        maskTransitionName="fade"
        okType="primary"
        onCancel={[Function]}
        onClose={[Function]}
        prefixCls="ant-modal"
        transitionName="zoom"
        visible={false}
        width="800px"
        wrapClassName=""
      >
        <PortalWrapper
          visible={false}
        />
      </Component>
    </Modal>
    <Space
      direction="vertical"
    >
      <div
        className="ant-space ant-space-vertical"
      >
        <div
          className="ant-space-item"
          key="ant-space-item-0"
          style={Object {}}
        >
          <Button
            block={false}
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[Function]}
          >
            <Wave>
              <button
                className="ant-btn"
                onClick={[Function]}
                type="button"
              >
                <LoadingIcon
                  existIcon={false}
                  loading={false}
                  prefixCls="ant-btn"
                >
                  <ForwardRef
                    motionName="ant-btn-loading-icon-motion"
                    onAppearActive={[Function]}
                    onAppearStart={[Function]}
                    onEnterActive={[Function]}
                    onEnterStart={[Function]}
                    onLeaveActive={[Function]}
                    onLeaveStart={[Function]}
                    removeOnLeave={true}
                    visible={false}
                  >
                    <CSSMotion
                      internalRef={null}
                      motionAppear={true}
                      motionEnter={true}
                      motionLeave={true}
                      motionName="ant-btn-loading-icon-motion"
                      onAppearActive={[Function]}
                      onAppearStart={[Function]}
                      onEnterActive={[Function]}
                      onEnterStart={[Function]}
                      onLeaveActive={[Function]}
                      onLeaveStart={[Function]}
                      removeOnLeave={true}
                      visible={false}
                    />
                  </ForwardRef>
                </LoadingIcon>
                <span
                  key=".0"
                >
                  Select
                </span>
              </button>
            </Wave>
          </Button>
        </div>
      </div>
    </Space>
  </MediaSelector>
</Provider>
`;
